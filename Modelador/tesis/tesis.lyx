#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass book
\use_default_options false
\language spanish
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize 11
\spacing onehalf
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 3cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle plain
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
tablename}{Tabla}
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
listtablename}{
\backslash
'Indice de tablas}
\end_layout

\begin_layout Plain Layout


\backslash
frontmatter
\end_layout

\end_inset


\end_layout

\begin_layout Title
Desarrollo de software para modelado y fabricación de objetos de madera
 usando un robot SCARA
\end_layout

\begin_layout Author
Roberto Loaeza Valerio
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
mainmatter
\end_layout

\begin_layout Plain Layout


\backslash
setcounter{page}{6}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Introducción
\end_layout

\begin_layout Standard
En la actualidad las pequeñas y medianas empresas de la región maderera
 del estado de Michoacán, más preciso en la localidad de Paracho, requieren
 tener la totalidad de sus procesos automatizados para poder competir en
 el mercado tan saturado actualmente.
 Desafortunadamente la mayoría de estas empresas no cuentan con todos los
 procesos automatizados.
\end_layout

\begin_layout Standard
Los procesos que pueden automatizarse los dividiremos en dos categorías
 para fines de su estudio:
\end_layout

\begin_layout Itemize
Procesos administrativos
\end_layout

\begin_layout Itemize
Procesos industriales
\end_layout

\begin_layout Standard
Los procesos administrativos abarca todo proceso relacionado con documentación
 de la empresa, algunos ejemplos de estos procesos son los siguientes departamen
tos: recursos humanos, recursos financieros, ventas, compras, entre otros.
 Estos procesos o departamentos estan parcial o totalmente cubiertos por
 aplicaciones ofrecidas por el gobierno de forma gratuita o haciendo uso
 de 7aplicaciones de terceros, algunas de las aplicaciones utilizadas son:
\end_layout

\begin_layout Itemize
ContPAQ
\end_layout

\begin_layout Itemize
Compiere
\end_layout

\begin_layout Itemize
NomiPAQ
\end_layout

\begin_layout Itemize
SUA
\end_layout

\begin_layout Standard
Por otra parte los procesos industriales son todos los procesos en los que
 se manipula una materia prima y es transformada en un producto final mediante
 el uso de maquinaria industrial, y es en estos procesos donde se centra
 el trabajo de la presente tesis.
\end_layout

\begin_layout Standard
Teniendo las empresas la necesidad de contar con maquinaria industrial de
 precisión se ven en la necesidad de adquirir esta maquinaria en el extrajero
 debido a que en el país no existen empresas presten estos servicios.
\end_layout

\begin_layout Standard
Al usar maquinaria extranjera es evidente que los costos de compra, instalación,
 mantenimiento y programación son elevados, en la tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Costos-de-adquisición"

\end_inset

 se muestran algunas maquinarias adquiridas por empresas de la localidad
 de Paracho Michoacán.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Empresa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maquinaria
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Costo de Adquisición
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Costo de mantenimiento
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PROCART
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Costos-de-adquisición"

\end_inset

Costos de adquisición de maquina industrial
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Observando la necesidad de la automatización en los procesos de fabricación
 de productos se optó por desarrollar una aplicación multiplataforma para
 el modelado de productos de madera haciendo uso de un robot SCARA realizado
 en la Facultad de Ingenieria Eléctrica de la Universidad Michoacana de
 San Nicolas de Hidalgo.
\end_layout

\begin_layout Section
Motivación
\end_layout

\begin_layout Standard
En la actualidad la mayoría de las pequeñas empresas de la región de Michoacán,
 en específico las de Paracho, no cuentan con procesos automatizados en
 la manufactura de sus materias primas.
\end_layout

\begin_layout Standard
Por otra parte, existen personas que tienen diseños muy innovadores pero
 por falta de una máquina que lo realize así como una aplicación para su
 diseño.
\end_layout

\begin_layout Section
Antecedentes
\end_layout

\begin_layout Standard
Los antecedentes previos realizados en la División de Estudios de Posgrado
 de la Facultad de Ingeniería Eléctrica, de la Universidad Michoacana de
 San Nicolás de Hidalgo, es la construcción de un robot manipulador tipo
 SCARA de cuatro grados de libertad de plataforma abierta
\begin_inset CommandInset citation
LatexCommand cite
key "OMAR"

\end_inset

, para el cual se desarrollará la aplicación de la presente tesis.
\end_layout

\begin_layout Section
Objetivos
\end_layout

\begin_layout Standard
El objetivo general es realizar investigación en los aspectos computacionales
 relacionados con el modelado 3D de objetos físicos y su conversión en instrucci
ones que el robot SCARA pueda seguir para construir físicamente los modelos
 en madera, de forma que se desarrolle tecnología propia que promueva una
 industria robótica y se generen diversas aplicaciones que tengan un importante
 impacto social como económico.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/objetivosTesis.png
	width 70page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:DiagramaObjetivos"

\end_inset

Diagrama representativo del objetivo de la tesis
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:DiagramaObjetivos"

\end_inset

 representa gráficamente el objetivo, donde se puede apreciar que el presente
 proyecto de tesis tiene como entrada el diseño por parte de una persona
 el cual es interpretado para su futura producción en un robot SCARA.
 
\end_layout

\begin_layout Subsection*
Objetivos específicos
\end_layout

\begin_layout Itemize
Desarrollar una aplicación para diseñar objetos de madera.
\end_layout

\begin_layout Itemize
Desarrollar una aplicación para transferir el diseño elaborado hacía el
 robot SCARA.
 
\end_layout

\begin_layout Section
Alcances
\end_layout

\begin_layout Standard
Los alcances previstos son:
\end_layout

\begin_layout Itemize
Implementación de algoritmos de gráficación sobre la aplicación de diseño:
\end_layout

\begin_deeper
\begin_layout Itemize
Puntos 
\end_layout

\begin_layout Itemize
Lineas
\end_layout

\begin_layout Itemize
Círculos
\end_layout

\begin_layout Itemize
Elipses
\end_layout

\begin_layout Itemize
Curvas de Bezier
\end_layout

\end_deeper
\begin_layout Itemize
Desarrollo de una aplicación multiplataforma(que pueda ejecutarse en la
 mayoría de los sistemas operativos actuales) capaz de modelar objetos de
 madera para su producción utilizando un robot SCARA.
\end_layout

\begin_layout Itemize
Desarrollo de interfaz entre la aplicación multiplataforma para modelar
 objetos de madera y el robot SCARA para la producción.
\end_layout

\begin_layout Section
Metodología
\end_layout

\begin_layout Standard
Para cumplir los objetivos mencionados anteriormente se propone desarrollar
 una aplicación multiplataforma para el modelado de objetos de madera en
 el lenguaje de programación Java.
\end_layout

\begin_layout Standard
Para lograr una aplicación aceptable se desarrollarán prototipos de la aplicació
n hasta lograr una estabilidad considerable, la cual tenga una velocidad
 aceptable a la hora de generar los modelos en diferentes vistas.
\end_layout

\begin_layout Standard
Con el fin de mejorar el diseño se evaluará la aplicación continuamente
 en la empresa de Rafael Cardiel.
\end_layout

\begin_layout Section
Contribuciones 
\end_layout

\begin_layout Standard
A continuación se describen brevemente las contribuciones de este trabajo:
\end_layout

\begin_layout Itemize
Desarrollo de una aplicación multiplataforma para la construcción de modelos
 físicos de madera.
 
\end_layout

\begin_layout Itemize
Aplicación multiplataforma para la conexion entre el modelador y el robot
 SCARA.
 
\end_layout

\begin_layout Itemize
Código fuente, éste se distribuirá bajo la 
\begin_inset Quotes eld
\end_inset


\emph on
GNU General Public License v2
\emph default

\begin_inset Quotes erd
\end_inset

 y puede ser accedido en la siguiente url: modelando-madera.googlecode.com
 para su mejoramiento y/o ser tomado como base para futuros proyectos.
\end_layout

\begin_layout Section
Descripción de los capítulos
\end_layout

\begin_layout Standard
En el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:2_Ambiente"

\end_inset

 se presentarán una revisión del estado del arte asociado con la paqueteria
 de software existente para el modelado/fabricación de objetos de madera.
\end_layout

\begin_layout Standard
En el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:3_Modelado3D"

\end_inset

 aborda las partes del software modelador tanto los algoritmos de graficación
 como la forma de interacción con el usuario final.
 
\end_layout

\begin_layout Standard
En el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:4_Interfaces3D"

\end_inset

 se mostrarán las principales interfaces de software para la implementación
 de software 3D, se mostrarán pros y contras de cada una de estas y finalmente
 se detallará el funcionamiento de la interfaz OpenGL sobre la cual se realizará
 la implementación del software.
\end_layout

\begin_layout Standard
En el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:5_InterfazModelado"

\end_inset

 trata las características del robot SCARA, la forma de conversión del modelo
 a acciones que el robot entienda así como un algoritmo de planeación para
 que el robot sea lo más optimo posible.
 También se describirá la interfaz entre el software de modelado y el robot.
\end_layout

\begin_layout Standard
En el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:6_Pruebas"

\end_inset

 se mostrarán resultados de pruebas realizadas en una primera instancia
 al software modelador, seguido de los resultados de la conectividad entre
 el software y el robot, y finalmente se verificará que tanta funcionalidad
 doto el algoritmo de planeación implementado.
\end_layout

\begin_layout Standard
En el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:7_Conclusiones"

\end_inset

 se aportarán las conclusiones generales resultado de la investigación abordada
 e ideas para trabajo de investigación posterior a realizar en el mismo
 campo del conocimiento.
 
\end_layout

\begin_layout Chapter
Ambiente de programación de robots manipuladores
\begin_inset CommandInset label
LatexCommand label
name "cha:2_Ambiente"

\end_inset


\end_layout

\begin_layout Standard
Por mucho tiempo el hombre ha elaborado máquinas que imitan las partes del
 cuerpo humano.
 Los antiguos egipcios unieron brazos mecánicos a las estatuas de sus dioses,
 estos brazos fueron operados por sacerdotes quienes clamaban que el movimiento
 de estos era inspiración de sus dioses.
 Los griegos contruyeron estatuas que operaban con sistemas hidráulicos
 para fascinar s los adoradores de los templos.
\end_layout

\begin_layout Section
Robot
\end_layout

\begin_layout Standard
El inicio de la robótica actual puede fijarse en la industria textil del
 siglo XVIII, cuando Joseph Jacquard inventa en 1801 una máquina textil
 programable mediante tarjetas perforadas.
 La revolución industrial impulsó el desarrollo de estos agentes mecánicos,
 entre los cuales se destacaron el torno mecánico motorizado de Babbitt
 (1892) y el mecanismo programable para pintar con spray de Pollard y Roselund
 (1939).
 Además de esto durante los siglos XVII y XVIII en Europa fueron construidos
 muñecos mecánicos muy ingeniosos que tenían algunas características de
 robots.
 En 1805, Henri Maillardert construyó una muñeca mecánica que era capaz
 de hacer dibujos.
 
\end_layout

\begin_layout Standard
La palabra robot se empleó por primera vez en una obra de teatro llamada
 "Ros-sum´s Universal Robota
\begin_inset Quotes erd
\end_inset

 (Los Robots Universales de Rossum) escrita por el dramaturgo checo Karel
 Capek en 1920.
 La palabra checa 'Robota' significa servidumbre o trabajador forzado, y
 cuando se tradujo al ingles se convirtió en el término 
\series bold
robot
\series default
.
\end_layout

\begin_layout Standard
Sin embargo el término robot con el paso de los años ha cambiado, a continuación
 se listan algunas de las definiciones más aceptadas:
\end_layout

\begin_layout Itemize
La ISO 8373 lo define como 
\begin_inset Quotes eld
\end_inset


\emph on
un manipulador multipropósito automaticamente controlado y reprogramable
 de mas de tres ejes
\emph default

\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Itemize
Manipulador multifuncional y reprogramable diseñado para mover material,
 partes, herramientas o dispositivos especializados mediante varios movimientos
 programados para la realización de una variedad de tareas
\emph on

\begin_inset CommandInset citation
LatexCommand cite
key "IRA"

\end_inset

.
\end_layout

\begin_layout Itemize
Mecanismo formado generalmente por elementos en serie, articulados entre
 sí, destinado al agarre y desplazamiento de objetos.
 Es multifuncionaly puede ser gobernado directamente por un operador humano
 o dispositivo lógico
\begin_inset CommandInset citation
LatexCommand cite
key "paperRobot"

\end_inset

.
\end_layout

\begin_layout Standard
Para fines de estudio clasificaremos los robots en: 
\end_layout

\begin_layout Itemize
Manipuladores.
 Generalmente estan montados sobre una base fija que les sirve para definir
 su área de trabajo y su posición en la misma.
 Su estructura básica es la de un brazo humano.
\end_layout

\begin_layout Itemize
Móviles.
 Este tipo de robots tienen la capacidad de cambiar de posición por si mismos
 para realizar alguna tarea determinada.
 Para lograrlo, tienen sensores que le permiten conocer su ambiente así
 como actuadores que le permiten desplazarse.
\end_layout

\begin_layout Standard
La gran mayoría de los robots usados en la industria son de tipo manipuladores.
\end_layout

\begin_layout Subsection
Estructura de los robots manipuladores
\end_layout

\begin_layout Standard
Básicamente la estructura de un robot manipulador es la de un brazo articulado.
\end_layout

\begin_layout Standard
Para describir la estructura de un robot manipulador:
\end_layout

\begin_layout Itemize
Estructura mecánica.
\end_layout

\begin_layout Itemize
Sistema de accionamiento.
\end_layout

\begin_layout Itemize
Sistema sensorial.
\end_layout

\begin_layout Itemize
Sistema de control.
\end_layout

\begin_layout Itemize
Elementos terminales.
\end_layout

\begin_layout Subsubsection
Estructura mecánica
\end_layout

\begin_layout Standard
Desde el punto de vista mecánico, el robot estáformado por una serie de
 elementos o eslabones unidos mediante articulaciones que permiten un movimiento
 relativo entre cada dos eslabones consecutivos.
\end_layout

\begin_layout Standard
Existen diferentes tipos de articulaciones como podemos observar en la figura
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:TiposArticulaciones"

\end_inset

:
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
a) La articulación de rotación suministra un grado de libertad, es decir
 permite la rotación sobre el eje de la articulación.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
b) La articulación prismática consiste en una translación a lo largo del
 eje de la articulación.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
c) En la articulación cilíndrica existen dos grados de libertad, una rotación
 y una translación sobre el eje de la articulación.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
d) La articulación planar se caracteriza por el movimiento de desplazamiento
 en un plano, tiene dos grados de libertad.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
e) Por último la articulación esférica combina tres giros en tres direcciones
 perpendiculares en el espacio.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/articulaciones.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tipos de articulaciones: a) rotación b) prismática c) cilíndrica d) planar
 e) esférica
\begin_inset CommandInset label
LatexCommand label
name "fig:TiposArticulaciones"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Sistema de accionamiento.
\end_layout

\begin_layout Subsubsection
Sistema sensorial.
\end_layout

\begin_layout Subsubsection
Sistema de control.
\end_layout

\begin_layout Subsubsection
Elementos terminales.
\end_layout

\begin_layout Subsection
Clasificación
\end_layout

\begin_layout Standard
Existe una gran variedad de tipos de brazos manipuladores y se pueden clasificar
 de distintas formas: por su estructura, por su forma de control, por su
 área de aplicación, por su fuente de potencia, por su geometría, por su
 movimiento cinemático, etc.
 [Spong89, Ramırez98].
 Hoy en d´ıa, los manipuladores est´an agrupados en clases de acuerdo a
 la combinaci´on de uniones usadas en su construcci´on [Petriu06]
\end_layout

\begin_layout Standard
Según la Asociación Internacional de Robótica(IFR):
\end_layout

\begin_layout Itemize
Robot secuencial.
\end_layout

\begin_layout Itemize
Robot de trayectoria controlable.
\end_layout

\begin_layout Itemize
Robot adaptativo.
\end_layout

\begin_layout Itemize
Robot telemanipulado.
\end_layout

\begin_layout Subsubsection
Area de trabajo
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement th
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/manipulador_alcance.png
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Categorías de los robots manipuladores y sus respectivas áreas de trabajo
\begin_inset CommandInset citation
LatexCommand cite
key "paperCinematica"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Programación de tareas
\end_layout

\begin_layout Standard
La secuencia que se tiene que realizar para programar una tarea en un robot
 manipulador generalmente sigue los pasos mostrados en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ProgramacionRobot"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/dCNC.png
	lyxscale 50
	width 30page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:ProgramacionRobot"

\end_inset

Programación de un robot manipulador.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Software CAD
\end_layout

\begin_layout Standard
El software CAD(Diseño Asistido por Computadora, del inglés Computer Aided
 Design) son sitemas informáticos para realizar tareas de creación, modificación
, análisis y optimización de un diseño.
\end_layout

\begin_layout Subsubsection
Software CAM
\end_layout

\begin_layout Standard
El software CAM(Manufactura Asistida por Computadora, del inglés Computer
 Aided Manufacturing) son sistemas informáticos para la planificación, gestión
 y control de las operaciones de una planta de fabricación mediante una
 interfaz directa o indirecta entre el sistema informático y los recursos
 de producción.
 
\end_layout

\begin_layout Itemize
Interfaz directa.
 Son aquellos donde la computadora se conecta directamente con el proceso
 de producción para monitorizar su actividad y realizar tareas de supervisión
 y control.
\end_layout

\begin_layout Itemize
Interfaz indirecta.
 Se trata de de aquellos en las que la computadora se utiliza como herramienta
 de ayuda para la fabricación, pero en las que no existe conexión directa
 con el proceso de producción.
\end_layout

\begin_layout Standard
La entrada de estos softwares son generalmente los diseños generados con
 software CAD.
\end_layout

\begin_layout Subsubsection
Software CNC 
\end_layout

\begin_layout Standard
El software CNC generalmente lee código G y realiza las operaciones de comunicac
ión con el robot necesarias para convertirlas en el movimiento deseado.
 
\end_layout

\begin_layout Section
Revisión del Estado del Arte
\end_layout

\begin_layout Standard
En la actualidad los robots son usados para realizar tareas peligrosas,
 difíciles, repetitivas y/o complicadas para los humanos.
 Esto usualmente toma la forma de un robot industrial usado en las líneas
 de producción.
 Algunas aplicaciones incluyen la limpieza de residuos tóxicos, minería
 y localización de minas terrestres.
 
\end_layout

\begin_layout Standard
En la actualidad los robots son usados para realizar una gran cantidad de
 tareas entre las cuales se encuentran las de realizar actividades peligrosas,
 difíciles, repetitivas y/o complicadas para los humanos.
\end_layout

\begin_layout Standard
Sin embargo la manufactura continúa siendo el principal mercado donde los
 robots son utilizados, en particular los robots articulados son los más
 usados comúnmente.
 Las aplicaciones incluyen soldado, pintado y carga de maquinaria.
 En este ramo la industria automotriz ha tomado gran ventaja de esta nueva
 tecnología donde los robots han sido programados para reemplazar el trabajo
 de los humanos en muchas tareas repetitivas.
\end_layout

\begin_layout Subsection
Programación de tareas
\end_layout

\begin_layout Standard
Software CAD
\end_layout

\begin_layout Itemize
AutoCAD
\end_layout

\begin_layout Itemize
SolidWorks
\end_layout

\begin_layout Itemize
RhinoCAD
\end_layout

\begin_layout Itemize
TurboCAD
\end_layout

\begin_layout Itemize
Graphite One CAD
\end_layout

\begin_layout Standard
Software CAM
\end_layout

\begin_layout Itemize
ArtCAM
\end_layout

\begin_layout Itemize
DeskCNC
\end_layout

\begin_layout Itemize
MeshCAM
\end_layout

\begin_layout Standard
Software CNC
\end_layout

\begin_layout Itemize
TurboCNC
\end_layout

\begin_layout Itemize
EMC
\end_layout

\begin_layout Itemize
DeskCNC
\end_layout

\begin_layout Subsection
Programación
\end_layout

\begin_layout Standard
Un lenguaje de programación de robots sirve como interfaz entre el usuario
 humano y el robot industrial.
 Los manipuladores de robots se diferencian a sí mismos de la automatización
 fija por ser 
\begin_inset Quotes eld
\end_inset

flexibles
\begin_inset Quotes erd
\end_inset

, es decir que son programables.
 No solo son programables los movimientos de los manipuladores sino que,
 a través del uso de sensores y comunicación con otros tipos de automatización,
 los manipuladores pueden adaptarse a las variaciones a medida que realizan
 su tarea.
\end_layout

\begin_layout Standard
Generalmente la programación de los robots se realiza fuera de linea, a
 continuación se listan paquetes existentes para programar:
\end_layout

\begin_layout Itemize
MS Robotic Studio ( ~ $ 4 000.00 M.N)
\end_layout

\begin_deeper
\begin_layout Itemize
Herramienta de programación visual para crear y depurar aplicaciones robóticas.
 El desarrollador puede interactuar con los robots mediante interfases basadas
 en web o nativas al sistema operativo (MS Windows).
\end_layout

\begin_layout Itemize
Contiene simulación realística provista por el motor PhysX de AGEIA.
 Se posibilita la emulación por software o la aceleración por hardware.
\end_layout

\begin_layout Itemize
Se permiten varios lenguajes como: Microsoft Visual Studio Express languages
 (Visual C#® y Visual Basic® .NET), JScript® y Microsoft IronPython 1.0 Beta
 1, y lenguajes de terceros que se adecuen a la arquitectura basada en servicios.
\end_layout

\begin_layout Itemize
Robots soportados: CoroWare's CoroBot ($3 200), Lego Mindstorms NXT, iRobot
 Create y Robosoft's robots (38 a 65 K€).
\end_layout

\end_deeper
\begin_layout Itemize
KUKA.OfficeLite (> $55 000.00 USD) 
\end_layout

\begin_deeper
\begin_layout Itemize
Este sistema de programación posee las mismas características que el software
 de sistema KUKA: para el manejo y la programación se utiliza la interfaz
 de usuario Original KUKA y la sintaxis KRL: un lenguaje completo.
\end_layout

\begin_layout Itemize
Disponibilidad de todo el repertorio de funciones de las respectivas ediciones
 del software de sistema.
 Sin embargo, no se pueden conectar dispositivos de hardware periféricos.
\end_layout

\begin_layout Itemize
Comprobación de sintaxis mediante el compilador y el interpretador disponibles;
 creación de programas KRL de usuario ejecutables.
\end_layout

\begin_layout Itemize
Control completo de la ejecución de un programa de aplicación de robot.
 Ello permite optimizar la duración de los ciclos.
\end_layout

\begin_layout Itemize
El Techware de KUKA para optimización de programas se puede utilizar e instalar
 en todo momento.
 De este modo, en un PC estándar se puede disponer de todo el software de
 sistema Original, sin necesidad de emulaciones.
\end_layout

\begin_layout Itemize
Las entradas originales se pueden simular.
\end_layout

\begin_layout Itemize
KUKA.OfficeLite no se puede utilizar para controlar un robot.
\end_layout

\end_deeper
\begin_layout Subsection
Desarrollo tecnológico
\end_layout

\begin_layout Standard
Desafortunadamente el desarrollo actual en el país está enfocado generalmente
 a robots móviles dejando a los manipuladores de lado.
\end_layout

\begin_layout Standard
Universidades como el Tecnológico de Monterrey [Dirección de Vinculación
 y Desarrollo campus Guadalajara] se está enfocando más en la planeación
 de movimientos para robots, así como el Instituto Tecnológico Autónomo
 de México[Laboratorio de robótica, ITAM] se enfocan al área de robots móviles
 pequeños.
\end_layout

\begin_layout Chapter
Modelado de objetos
\begin_inset CommandInset label
LatexCommand label
name "cha:3_Modelado3D"

\end_inset


\end_layout

\begin_layout Standard
Una aplicación de modelado de objetos proporciona una biblioteca de funciones
 que pueden utilizarse para crear diseños de objetos que posteriormente
 se pueden plasmar en madera o algún otro tipo de material que pueda ser
 moldeado por alguna de las herramientas soportadas por el robot.
 Estas funciones se denominan primitivas gráficas o simplemente primitivas.
\end_layout

\begin_layout Standard
Para describir un modelo, primero es necesario seleccionar un sistema de
 coordenadas cartesianas adecuado, que puede ser bidimensional o tridimensional.
 Después se describen los objetos del modelo proporcionando sus especificaciones
 geométricas.
 Por ejemplo se define una línea recta proporcionando la posicion de los
 dos puntos extremos.
\end_layout

\begin_layout Section
Sistemas de coordenadas
\end_layout

\begin_layout Standard
Un sistema de coordenadas es un conjunto de valores que permiten definir
 exactamente la posición de un punto cualesquiera en el espacio, debido
 a que se requiere poder realizar un modelo de un objeto real se requieren
 el sistema de coordenadas de tres dimensiones como se muestra en la figura
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sistema-de-coordenadas3d"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tCoordenadas.png
	width 30page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Sistema-de-coordenadas3d"

\end_inset

Sistema de coordenadas de 3 dimensiones
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Sin embargo la aplicación desarrollada utiliza solo dos dimensiones al mismo
 tiempo para el desarrollo de modelos.
\end_layout

\begin_layout Section
Primitivas de graficación
\end_layout

\begin_layout Standard
Las primitivas gráficas que describen la geometría de los objetos se denominan
 normalmente primitrivas geométricas.
 Entre las primitivas geométricas más simples son las que indican posiciones
 de puntos y segmentos de líneas rectas.
 Adicionalmente se pueden incluir circulos, elipses y curvas tipo bezier.
\end_layout

\begin_layout Subsection
Punto
\end_layout

\begin_layout Standard
El punto es el objeto más simple que puede representarse, solo se necesita
 un punto dentro del sistema de coordenadas.
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
Punto\left(x,\, y,\, z\right)\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Linea
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
Línea\left(Punto\, origen,\, Punto\, destino\right)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tLinea.png
	lyxscale 50
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Linea
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Círculo
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
Círculo\left(Punto\, origen,\, radio\right)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tCirculo.png
	lyxscale 50
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Círculo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Elipse
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
Elipse\left(Punto\, origen,\, radio\, a,\, radio\, b\right)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tElipse.png
	lyxscale 50
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Elipse
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Curva de Bezier
\end_layout

\begin_layout Subsection
Elementos compuestos
\end_layout

\begin_layout Section
Almacenamiento y recuperación
\end_layout

\begin_layout Standard
El almacenamiento y recuperación es una de las operaciones más importantes
 en un sistema, 
\end_layout

\begin_layout Subsection
Almacenamiento en formato XML
\end_layout

\begin_layout Standard
El formato XML
\end_layout

\begin_layout Standard
Algunas de las ventajas de este formato son:
\end_layout

\begin_layout Itemize
Independiente de la plataforma.
\end_layout

\begin_layout Itemize
Soporta código Unicode.
\end_layout

\begin_layout Itemize
El mismo documento define la estructura y los campos asi como los valores
 respectivos.
\end_layout

\begin_layout Itemize
Es basado en estándares internacionales.
\end_layout

\begin_layout Subsection
Estructura de almacenamiento
\end_layout

\begin_layout Standard
La estructura de almacenamiento puede observarse en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:EstructuraXML"

\end_inset

.
 Como puede observar la estructura es simple, compacta y fácil de entender.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/estructura_xml.png
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:EstructuraXML"

\end_inset

Estructura de almacenamiento
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:EstructuraXML"

\end_inset

 puede observarse:
\end_layout

\begin_layout Itemize
No existe límite en la cantidad de primitivas usadas en un diseño.
\end_layout

\begin_layout Itemize
Los puntos de control de una primitiva pueden no tener límite, es decir
 una primitiva puede tener N puntos de control.
 
\end_layout

\begin_layout Itemize
Cada primitiva es identificada mediante mediante un número entero (tipo):
\end_layout

\begin_deeper
\begin_layout Itemize
Punto (1)
\end_layout

\begin_layout Itemize
Línea (2)
\end_layout

\begin_layout Itemize
Poli-Línea (3)
\end_layout

\begin_layout Itemize
Círculo (4)
\end_layout

\begin_layout Itemize
Elipse (5)
\end_layout

\begin_layout Itemize
Curva de Bezier (6)
\end_layout

\end_deeper
\begin_layout Section
Importacion de otros formatos
\end_layout

\begin_layout Subsection
Imágenes PGM
\end_layout

\begin_layout Standard
Una imagen PGM es la representacion a escala de grises de una imagen.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/logo_a_robot.png
	width 70page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:pgm_a_robot"

\end_inset

PGM a Robot
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Interfaces de software
\begin_inset CommandInset label
LatexCommand label
name "cha:4_Interfaces3D"

\end_inset


\end_layout

\begin_layout Standard
La interfaz de usuario es uno de los apartados con más relevancia de un
 sistema de computo, en la actualidad todo sistema debe contener una herramienta
 con la que el usuario pueda ordenar al computador que hacer.
\end_layout

\begin_layout Standard
Una interfaz de usuario mal diseñada puede causar que el mejor sistema de
 cómputo sea ineficaz y por lo tanto sea deshechado, es por esto que se
 debe realizar un buen diseño de la interfaz de usuario, la cual incluye:
\end_layout

\begin_layout Itemize
Eleccion de lenguaje de programación.
\end_layout

\begin_layout Itemize
Diseño de la interfaz gráfica.
\end_layout

\begin_layout Itemize
Elección de sistema de renderización.
\end_layout

\begin_layout Section
Lenguaje de programación
\end_layout

\begin_layout Standard
En la actualidad existe una gran cantidad de lenguajes de programación,
 la mayoría de propósito general y el resto de propósito específico, a continuac
ión se listan los más populares de ambas categorías:
\end_layout

\begin_layout Itemize
C.
\end_layout

\begin_layout Itemize
Basic.
\end_layout

\begin_layout Itemize
Java.
\end_layout

\begin_layout Itemize
.Net.
\end_layout

\begin_layout Itemize
Perl.
\end_layout

\begin_layout Itemize
PHP.
\end_layout

\begin_layout Standard
Estos podrían ser los más utilizados hoy por hoy, pero debido a la heterogeneida
d de sistemas operativos y arquitecturas, no todos los lenguajes de programación
 son aplicables.
 
\end_layout

\begin_layout Standard
En el caso de los lenguajes compilados es poco probable su funcionalidad
 en diferentes plataformas debido a la dependencia de tipo de procesador
 que adquieren al momento de compilar, por ejemplo si se compila en un procesado
r tipo RISC es imposible ejecutarlo en un procesador tipo CISC.
\end_layout

\begin_layout Standard
Por otro lado los lenguajes interpretados son muy portables a todas las
 arquitecturas y sistemas operativos debido a que no dependen de un tipo
 de arquitectura pero requieren de que exista un progama nativo que los
 interprete, es decir, que si la empresa desarrolladora del lenguaje interpretad
o no libera una versión de su intérprete para un sistema operativo en una
 arquitectura determinada los programas escritos en este lenguaje no se
 ejecutarán.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="4">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Windows
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linux
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MacOS
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Basic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.Net
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Perl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PHP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tablaLenguajesProgramacion"

\end_inset

Lenguajes Sistemas Operativos
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tablaLenguajesProgramacion"

\end_inset

 se puede apreciar los alcances de los lenguajes de programación más desarrollad
os y más difundidos en la actualidad, dejando claro que Java es el lenguaje
 de programación con mayor portabilidad debido a que se cuenta con intérpretes
 para todas las arquitecturas y además que no se requiere modificar el código
 fuente para ejecutarse en éstas.
\end_layout

\begin_layout Subsection
Java
\end_layout

\begin_layout Standard
Java es una plataforma de software desarrollada por Sun Microsystem, de
 forma que los programas creados en ella puedan ejecutarse sin cambios en
 diferentes tipos de arquitecturas y dispositivos computacionales.
 
\end_layout

\begin_layout Standard
Esta plataforma está compuesta por:
\end_layout

\begin_layout Itemize
El Lenguaje de programación.
\end_layout

\begin_layout Itemize
La máquina virtual de Java (JVM).
\end_layout

\begin_layout Itemize
Un conjunto de bibliotecas estándar, conocidas como API.
\end_layout

\begin_layout Standard
El lenguaje de programación usa la sintaxis de C++, incorpora sincronización,
 manejo de tareas e interfaces como un mecanismo alternativo a la herencia
 múltiple de C++.
\end_layout

\begin_layout Standard
La máquina virtual de Java (JVM) es un programa nativo (un ejecutable de
 una plataforma específica) capaz de interpretar y ejecutar código binario
 especial (llamado Java Bytecode), el cual es generado a partir del compilador
 de Java.
 Es por esto que Sun Microsystem ha liberado versiones de su JVM para las
 arquitecturas y sistemas operativos más utilizados, volviendo así a las
 aplicaciones desarrolladas en Java multiplataforma.
\end_layout

\begin_layout Section
Diseño de la interfaz gráfica
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/igu_tesis.png
	width 70page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:igu_diseño"

\end_inset

Diseño de la interfaz gráfica
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Elección de sistema de renderización.
\end_layout

\begin_layout Standard
La elección debe realizarse tomando en cuenta ventajas y desventajas de
 las tecnologías disponibles las cuales se muestran en la tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Comparativa-entre-Direct3DJava3dOpenGl"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float table
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Direct3D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java3D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OpenGL
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Plataformas soportadas
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Windows
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Multiplataforma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Multiplataforma
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Soporte nativo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Si
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Si
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Licencia
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EULA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GNU General Public
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SGI
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Comparativa entre Direct3D, Java3D y OpenGL
\begin_inset CommandInset label
LatexCommand label
name "tab:Comparativa-entre-Direct3DJava3dOpenGl"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Debido a que Direct3D solo soporta la plataforma MS-Windows fue deshechada
 y por otra parte Java3D tiene una dependencia con OpenGL o con Direct3D
 también fue deshecada dejando como sistema de renderización a OpenGL.
\end_layout

\begin_layout Subsection
OpenGL
\end_layout

\begin_layout Standard
OpenGL es una especificación estándar que define una API multilenguaje y
 multiplataforma para escribir aplicaciones que produzcan gráficos 2D y
 3D.
 Fue desarrollada por Silicon Graphics Inc.
 (SGI) en 1992 .
\end_layout

\begin_layout Standard
Las funciones y comandos de esta API están integrados en las tarjetas de
 aceleración gráfica 3D, o en su defecto son emuladas por el sistema operativo.
 Es claro que para el propósito específico de modelado 3D no se debe realizar
 emulación por software sino se debe tener acceso directo al hardware.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/opengl-hw.png
	lyxscale 50
	width 70page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Aplicación-OpenGL"

\end_inset

Aplicación utilizando OpenG y aceleración gráfica por hardware
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Aplicación-OpenGL"

\end_inset

 se muestra una aplicación utilizando OpenGL y aceleración gráfica por hardware;
 se puede observar que las llamadas a la interfaz de aplicación OpenGL pasan
 directamente al hardware de aceleración y no pasan a tavés de la interfaz
 de dispositivo de gráfico (GDI) que sería el caso si se tratara de simulación
 por software.
\end_layout

\begin_layout Subsubsection
GLUT
\end_layout

\begin_layout Standard
Es un conjunto de herramientas OpenGL, un sistema de ventanas independientes
 para escribir programas OpenGL en lenguajes C y FORTRAN.
 Implementa un simple interfaz de programación para aplicaciones (API) para
 OpenGL.
 Por su parte GLUT hace considerablemente fácil la programación OpenGL.
\end_layout

\begin_layout Standard
GLUT provee un soporte para las plataformas Windows, Linux, Mac.
 Con la única desventaja de tener que recompilar para ser usado en otra
 plataforma.
\end_layout

\begin_layout Subsubsection
JOGL (JSR-231)
\end_layout

\begin_layout Standard
Jogl es un enlace del lenguaje de programación Java para la API de OpenGL.
 Soporta integración con los estándares de Java AWT y Swing.
 Jogl provee aceso a las más recientes rutinas de OpenGL (OpenGL 2.0 con
 extenciones de fabricante) asi como una pataforma independiente para accesar
 a hardware acelerador.
 
\end_layout

\begin_layout Standard
Jogl tambien prvee algunas de las mas populares características introducidas
 por otros enlaces existentes para OpenGL como son GL4Java, LWJGL, GLUT
 entre otros.
\end_layout

\begin_layout Standard
Es importante mencionar que esta tecnologia es código abierto y fue iniciada
 por Game Technology Group.
\end_layout

\begin_layout Chapter
Interfaz entre modelado y el robot SCARA
\begin_inset CommandInset label
LatexCommand label
name "cha:5_InterfazModelado"

\end_inset


\end_layout

\begin_layout Standard
La interfaz entre el software modelador y el robot es una parte muy importante,
 ya que si esta llega a colapsar o mal-funcionar se verá reflejado en un
 trabajo final no satisfactorio.
\end_layout

\begin_layout Section
Robot SCARA
\end_layout

\begin_layout Standard
El robot con el cual se trabajó se puede apreciar en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RobotScara"

\end_inset

.
 Este robot cuenta con 4 grados de libertad construido en la Factultad de
 Ingeniería Electrica de la Universidad Michoacan de San Nicolas de Hidalgo,
 fijo en su base y hecho de acero y aluminio.
\end_layout

\begin_layout Standard
La estructura física fue realizada por una empresa dedicada a la robótica
 denominada Cervantes Co., ubicada en Paracho Michoacán.
\end_layout

\begin_layout Standard
La programación del controlador fue realizada por Omar Rodríguez Páez
\begin_inset CommandInset citation
LatexCommand cite
key "tesisOmar"

\end_inset

 .
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/robot-scara.png
	lyxscale 10
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:RobotScara"

\end_inset

Robot SCARA
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Características
\end_layout

\begin_layout Standard
Entre las características más relevantes acerca del robot se tiene:
\end_layout

\begin_layout Itemize
4 Grados de libertad.
\end_layout

\begin_layout Itemize
Altura 60 cm.
\end_layout

\begin_layout Itemize
Alcance máximo de su brazo 50 cm.
\end_layout

\begin_layout Itemize
Construido en acero y aluminio.
\end_layout

\begin_layout Itemize
Peso alrededor de 45 Kg.
\end_layout

\begin_layout Subsection
Arquitectura
\end_layout

\begin_layout Standard
La arquitectura de un robot es la disposición de los elementos que conforman
 o integran
\begin_inset CommandInset citation
LatexCommand cite
key "tesisCarlosE"

\end_inset

.
\end_layout

\begin_layout Subsection
Limitantes
\end_layout

\begin_layout Section
Conversión de modelado a acciones SCARA
\end_layout

\begin_layout Standard
Debido a que en el modelo solo contamos con puntos definidos dentro del
 sistema de coordenadas cartesianas de tres dimensiones es necesario calcular
 el conjunto de ángulos de las articulaciones para logar el resultado deseado.
 Esto lo solucionaremos usando cinemática inversa.
\end_layout

\begin_layout Subsection
Cinemática inversa
\end_layout

\begin_layout Standard
En la cinemática inversa se conoce la posición y la orientación del elemento
 terminal referido a la base y se desea determinar los angulos articulares
 para alcanzar dicha posición.
\end_layout

\begin_layout Standard
Existen varias soluciones a este problema:
\end_layout

\begin_layout Itemize
Soluciones Cerradas(analíticas)
\end_layout

\begin_deeper
\begin_layout Itemize
Solución algebraica
\end_layout

\begin_layout Itemize
Solución geométrica
\end_layout

\end_deeper
\begin_layout Itemize
Soluciones Numéricas
\end_layout

\begin_deeper
\begin_layout Itemize
Iterativas
\end_layout

\end_deeper
\begin_layout Standard
Debido a su naturaleza iterativa, las soluciones numéricas son generalmente
 mucho más lentas que las solución de forma cerrada, en algunos casos las
 soluciones numéricas son tan lentas que pueden ocasionar problemas de cinemátic
a es por esto que solo nos enfocaremos en las soluciones analíticas.
\end_layout

\begin_layout Subsubsection
Solución Algebraica
\end_layout

\begin_layout Subsubsection
Solución Geométrica
\end_layout

\begin_layout Standard
Recordando algunas identidades trigonométricas:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\frac{sin\left(A\right)}{a}=\frac{sin\left(B\right)}{b}=\frac{sin\left(C\right)}{c}\label{eq:leycos1}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
a^{2}=b^{2}+c^{2}-\left(2bc\right)cos\left(A\right)\label{eq:leycos2}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
'
\begin_inset Formula \begin{equation}
cos\left(\Theta\right)=cos\left(-\Theta\right)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Primero se sabe que la orientación del ultimo eslabón es la suma de las
 variables articulares, como se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Orientación-del-ultimo"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\Theta=\Theta_{1}+\Theta_{2}+\Theta_{3}\label{eq:geo-teta}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tcinematica1.png
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Orientación-del-ultimo"

\end_inset

Orientación del ultimo eslabon
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Se calcula 
\begin_inset Formula $\theta_{2}$
\end_inset

 aplicando ec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:leycos2"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
x^{2}+y^{2}=l_{1}^{2}+l_{2}^{2}-\left(2l_{1}l_{2}\right)\cos\left(180-\Theta_{2}\right)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
debido a que:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
cos\left(180-\Theta_{2}\right)=-cos\left(\Theta_{2}\right)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Resulta:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
cos\left(\Theta_{2}\right)=\frac{x^{2}+y^{2}-l_{1}^{2}-l_{2}^{2}}{2l_{1}l_{2}}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tcinematica2.png
	lyxscale 50
	width 30page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:CinematicaAngulos"

\end_inset

Ángulos 
\begin_inset Formula $\beta,\,\psi\, y\,\Theta_{1}$
\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Se calcula 
\begin_inset Formula $\theta_{1}$
\end_inset

 :
\end_layout

\begin_layout Standard
Si se definen dos ángulos como se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:CinematicaAngulos"

\end_inset

 se cumple:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\Theta_{1}=\beta-\psi\end{equation}

\end_inset


\end_layout

\begin_layout Standard
El ángulo 
\begin_inset Formula $\beta$
\end_inset

 se calcula:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
sin\left(\beta\right)=\frac{y}{\sqrt{x^{2}+y^{2}}}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
y para el ángulo 
\begin_inset Formula $\psi$
\end_inset

 se usa ec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:leycos1"

\end_inset

 y se tiene:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
cos\left(\psi\right)=\frac{x^{2}+y^{2}+l_{1}^{2}-l_{2}^{2}}{2l_{1}\sqrt{x^{2}+y^{2}}}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Finalmente se calcula 
\begin_inset Formula $\theta_{3}$
\end_inset

 usando la siguiente ecuación:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\Theta_{3}=\Theta-\Theta_{1}-\Theta_{2}\label{eq:geo-teta3}\end{equation}

\end_inset


\end_layout

\begin_layout Section
Conectividad PC-Robot
\end_layout

\begin_layout Chapter
Pruebas
\begin_inset CommandInset label
LatexCommand label
name "cha:6_Pruebas"

\end_inset


\end_layout

\begin_layout Section
Introducción 
\end_layout

\begin_layout Section
Funcionalidad multiplataforma del software 3D
\end_layout

\begin_layout Subsection
Windows
\end_layout

\begin_layout Subsection
Linux
\end_layout

\begin_layout Section
Conectividad multiplataforma entre software y el robot
\end_layout

\begin_layout Subsection
Windows
\end_layout

\begin_layout Subsection
Linux
\end_layout

\begin_layout Section
Pruebas en campo
\end_layout

\begin_layout Subsection
Realizacion de primitivas
\end_layout

\begin_layout Subsection
Imagenes PGM
\end_layout

\begin_layout Chapter
Conclusiones
\begin_inset CommandInset label
LatexCommand label
name "cha:7_Conclusiones"

\end_inset


\end_layout

\begin_layout Section
Conclusiones
\end_layout

\begin_layout Section
Trabajos futuros 
\end_layout

\begin_layout Chapter*
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Anexo}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Anexo Glosario
\end_layout

\begin_layout Description
CISC Complex-Intruction-Set Computing.
\end_layout

\begin_layout Description
CRM Customer Relationship Management.
\end_layout

\begin_layout Description
ERP Enterprise Resource Planning.
\end_layout

\begin_layout Description
ISO International Organization for Standardization.
\end_layout

\begin_layout Description
JIRA Japan Industrial Robot Association.
\end_layout

\begin_layout Description
OpenGL Open Graphics Library.
\end_layout

\begin_layout Description
PGM Portable GrayMap.
\end_layout

\begin_layout Description
RISC Reduced-Intruction-Set Computing.
\end_layout

\begin_layout Description
SCARA Selective Compliant Articulated Robot Arm.
\end_layout

\begin_layout Description
XML Extensible Markup Language.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "WIKI-ROBOT"
key "key-3"

\end_inset

http://en.wikipedia.org/wiki/Industrial_robot
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "GLUT"
key "key-4"

\end_inset

http://www.opengl.org/resources/libraries/glut/
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "JOGL"
key "key-5"

\end_inset

https://jogl.dev.java.net/
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Kurfess05"
key "roboAutomata"

\end_inset

Kurfess, T.
 Robotics and Automation Handbook.
 Ed.
 CRC PRESS, 2005.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Gibilisco03"
key "encicloRobot"

\end_inset

Gibilisco, S.
 Concise Encyclopedia of Robotics,Ed.
 McGraw-Hill, 2003
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Davison07"
key "java.joglj3d"

\end_inset

Davison, A.
 Pro Java 6 3D Game Development Java 3D, JOGL, JInput and JOAL APIs.
 Ed.
 Apress, 2007
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Ollero"
key "manipuladores"

\end_inset

Ollero, A.
 Robótica: Manipuladores y robots móviles, Marcombo Editorial.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Galitz07"
key "disenoInterface"

\end_inset

Galitz, W.
 The Essential Guide to User Interface Design, Ed.
 Wiley, 2007.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Rodriguez08"
key "tesisOmar"

\end_inset

Rodriguez, O.
 Diseño y Construcción de un Robot SCARA utilizando motores de CD de pasos
 y con escobillas, Tesis de Licenciatura, UMSNH, 2008
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Estrada06"
key "tesisCarlosE"

\end_inset

Estrada, C.
 Diseño de un sistema de control de seguimiento de trayectorias para un
 robot móvil.
 Tesis de Maerstría.
 UMSNH, 2006.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Sanchez07"
key "paperCinematica"

\end_inset

Sanchéz, O.
 Cinemática de los manipuladores, Universidad Huelva, Huelva España.
 2007
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Sanchez06"
key "paperRobot"

\end_inset

Sanchéz, O.
 Robot, Universidad Huelva, Huelva España.
 2006
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Instituto"
key "IRA"

\end_inset

Instituto de Robótica de América
\end_layout

\end_body
\end_document
