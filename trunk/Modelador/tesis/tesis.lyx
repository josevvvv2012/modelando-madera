#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass book
\begin_preamble
\newenvironment{abstractEN}
{
  \cleardoublepage
  \thispagestyle{empty}
    \@mkboth{\abstractname}{\abstractname}
  \addcontentsline{toc}{section}{Abstract}
  \centerline{\bf {\LARGE Abstract}}
  \centerline{\ }
} {}

\newenvironment{abstractSP}
{
  \cleardoublepage
  \thispagestyle{empty}
    \@mkboth{\abstractname}{\abstractname}
  \addcontentsline{toc}{section}{Resumen}
  \centerline{\bf {\LARGE Resumen}}
  \centerline{\ }
} {}
\newenvironment{dedication}
{
  \cleardoublepage
  \thispagestyle{empty}
  \vspace*{1in}
  \addcontentsline{toc}{section}{Dedicatoria}
}
{}

\newenvironment{agradece}
{
  \cleardoublepage
  \thispagestyle{empty}
  \vspace*{1in}
  \addcontentsline{toc}{section}{Agradecimientos}
}
{}
\end_preamble
\use_default_options false
\language spanish
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize 11
\spacing other 1.6
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 3.5cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 2.5cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle headings
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
tablename}{Tabla} 
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
listtablename}{
\backslash
'Indice de tablas} 
\end_layout

\begin_layout Plain Layout


\backslash
floatname{algorithm}{C
\backslash
'odigo} 
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
bibname{Referencias}
\end_layout

\begin_layout Plain Layout


\backslash
frontmatter
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
 }
\end_layout

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\begin_layout Plain Layout

    {
\backslash
Large
\backslash
bf{
\backslash
MakeUppercase{Desarrollo de software para modelado y fabricación de objetos
 de madera usando un robot SCARA}}}
\end_layout

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
 }
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
 }
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
bf{TESIS}}
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
 }
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
 }
\end_layout

\begin_layout Plain Layout


\backslash
centerline{Que para obtener el grado de}
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
MakeUppercase{
\backslash
bf{Maestro en Ciencias en Ingeniería Eléctrica}}}
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
 }
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
 }
\end_layout

\begin_layout Plain Layout


\backslash
centerline{presenta}
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
bf{Roberto Loaeza Valerio}}
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
 }
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
 }
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
bf{Dr.
 Leonardo Romero Muñoz}}
\backslash
centerline{
\backslash
small{
\backslash
bf{Director de Tesis}}}
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
 }
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
 }
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
 }
\end_layout

\begin_layout Plain Layout


\backslash
centerline{Universidad Michoacana de San Nicol
\backslash
'as de Hidalgo}
\end_layout

\begin_layout Plain Layout


\backslash
centerline{
\backslash
 }
\end_layout

\begin_layout Plain Layout


\backslash
centerline{{Agosto} {2009}}
\end_layout

\begin_layout Plain Layout


\backslash
setcounter{footnote}{0}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{dedication} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align right

\emph on
A todas las personas que han creído en mi...
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{dedication}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{agradece} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center

\series bold
\size larger
Agradecimientos
\end_layout

\begin_layout Standard
\noindent
\align right

\emph on
A mis padres, hermanos y esposa, por su constante e infinito cariño.
\end_layout

\begin_layout Standard
\noindent
\align right

\emph on
A mis maestros, por transmitirme su conocimiento.
\end_layout

\begin_layout Standard
\noindent
\align right

\emph on
A mi asesor Leonardo Romero por su valiosa asesoría y dirección académica.
\end_layout

\begin_layout Standard
\noindent
\align right

\emph on
A la Universidad Michoacana de San Nicolás de Hidalgo y al Consejo Nacional
 de Ciencia y Tecnología, por el apoyo otorgado para realizar estos estudios.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{agradece}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{abstractSP}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Desarrollo de software para modelado y fabricación de objetos de madera
 usando un robot SCARA
\end_layout

\begin_layout Standard
En este trabajo se presenta el desarrollo de una aplicación de diseño e
 implementación de objetos para el robot SCARA desarrollado en la División
 de Estudios de Posgrado de la Facultad de Ingeniería Eléctrica de la Universida
d Michoacana de San Nicolás de Hidalgo.
 Primero se describen los algoritmos de diseño así como su implementación
 para realizar un seguimientos de puntos que serán convertidos en comandos
 que el robot entienda para su implementación en madera.
 Se describe la interfaz gráfica de usuario, una de las partes mas importantes
 de toda aplicación, tomando en cuenta ciertos criterios de diseño bien
 establecidos.
 Se describe también la forma de conexión con el robot mediante el uso de
 bibliotecas externas bien definidas.
 Se presentan los resultados de varias pruebas realizadas, las cuales van
 desde diseños simples hasta diseños complejos.
 Y finalmente las conclusiones.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{abstractSP}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\backslash
cleardoublepage
\backslash
addcontentsline{toc}{section}{
\backslash
'Indice general} 
\end_layout

\begin_layout Plain Layout


\backslash
tableofcontents
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newpage
\backslash
cleardoublepage
\backslash
addcontentsline{toc}{section}{
\backslash
'Indice de figuras} 
\end_layout

\begin_layout Plain Layout


\backslash
listoffigures
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newpage
\backslash
cleardoublepage
\backslash
addcontentsline{toc}{section}{
\backslash
'Indice de tablas} 
\end_layout

\begin_layout Plain Layout


\backslash
listoftables 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newpage
\backslash
cleardoublepage 
\backslash
addcontentsline{toc}{section}{
\backslash
'Indice de c
\backslash
'odigos} 
\end_layout

\begin_layout Plain Layout


\backslash
listof{algorithm}{
\backslash
'Indice de c
\backslash
'odigos}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
mainmatter
\end_layout

\begin_layout Plain Layout


\backslash
setcounter{page}{19}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Introducción
\end_layout

\begin_layout Standard
En la actualidad las pequeñas y medianas empresas de la región maderera
 del estado de Michoacán requieren tener sus procesos automatizados para
 poder competir en el mercado tan saturado actualmente.
 Desafortunadamente la mayoría de estas empresas no cuentan con todos los
 procesos automatizados.
\end_layout

\begin_layout Standard
Los procesos que pueden automatizarse los dividiremos en dos categorías
 para fines de su estudio:
\end_layout

\begin_layout Itemize
Procesos administrativos
\end_layout

\begin_layout Itemize
Procesos industriales
\end_layout

\begin_layout Standard
Los procesos administrativos abarcan todo proceso relacionado con documentación
 de la empresa.
 Algunos ejemplos de estos procesos se dan en los siguientes departamentos:
 recursos humanos, recursos financieros, ventas, compras, entre otros.
 Estos procesos estan parcial o totalmente automatizados por aplicaciones
 de computo ofrecidas por el gobierno de forma gratuita o haciendo uso de
 aplicaciones de terceros
\end_layout

\begin_layout Standard
Algunas de las aplicaciones mas comunes utilizadas en esta áre administrativa
 son: ContPAQ, Compiere, NomiPAQ, SUA entre otras.
\end_layout

\begin_layout Standard
Por otra parte, los procesos industriales normalmente manipulan una materia
 prima y la transforman en un producto final, mediante el uso de maquinaria
 industrial.
 Precisamente en estos procesos se centra el trabajo de la presente tesis.
\end_layout

\begin_layout Standard
Teniendo las empresas la necesidad de contar con maquinaria industrial de
 precisión se ven en la necesidad de adquirir esta maquinaria en el extrajero,
 debido a que en el país no existen empresas que ofrezcan estos productos.
\end_layout

\begin_layout Standard
Al usar maquinaria de importación es evidente que los costos de compra,
 instalación y mantenimiento son elevados, por ejemplo la empresa PROCART
 de la localidad de Paracho Michoacán adquirió una maquinaria robotica por
 el costo aproximado de 1,000,000 pesos con un costo de mantenimiento de
 10,000.
 pesos.
\end_layout

\begin_layout Standard
Observando la necesidad de la automatización en los procesos de fabricación
 de productos se optó por desarrollar una aplicación multiplataforma para
 el modelado de productos de madera haciendo uso de un robot SCARA, construido
 en la Facultad de Ingenieria Eléctrica de la Universidad Michoacana de
 San Nicolas de Hidalgo.
\end_layout

\begin_layout Section
Motivación
\end_layout

\begin_layout Standard
Las razones principales que motivaron la elaboración de la presente tesis
 son las siguientes:
\end_layout

\begin_layout Itemize
En la actualidad la mayoría de las pequeñas empresas de las regiones de
 Michoacán, en particular las de Paracho, no cuentan con procesos automatizados
 en la manufactura de sus materias primas.
\end_layout

\begin_layout Itemize
Por otra parte, existen personas que tienen diseños muy innovadores de productos
; pero por falta de recursos económicos para adquirir un robot que lo realize,
 así como un programa ed cómputo para su realización se han quedado solo
 en ideas que no llegan a materializarse.
\end_layout

\begin_layout Section
Antecedentes
\end_layout

\begin_layout Standard
El antecedente más cercano que se tiene, es el trabajo realizado en la División
 de Estudios de Posgrado de la Facultad de Ingeniería Eléctrica, de la Universid
ad Michoacana de San Nicolás de Hidalgo, que es la construcción de un robot
 manipulador tipo SCARA, de cuatro grados de libertad de plataforma abierta
\begin_inset CommandInset citation
LatexCommand cite
key "tesisOmar"

\end_inset

, para el cual se desarrollará la aplicación de la presente tesis.
\end_layout

\begin_layout Section
Objetivos
\end_layout

\begin_layout Standard
El objetivo general es realizar investigación en los aspectos computacionales
 relacionados con el modelado 3D de objetos físicos y su conversión en instrucci
ones que el robot SCARA pueda seguir para construir físicamente los modelos
 en madera, de forma que se desarrolle tecnología propia que promueva una
 industria robótica y se generen diversas aplicaciones que tengan un importante
 impacto social y económico.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/objetivosTesis.png
	lyxscale 50
	width 70page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:DiagramaObjetivos"

\end_inset

Diagrama representativo de sistema de software desarrollado en esta tesis
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:DiagramaObjetivos"

\end_inset

 representa gráficamente la ubicación del software de desarrollado; etiquetado
 como aplicacion modeladora.
 Donde se puede apreciar que el presente trabajo de tesis, tiene como entrada
 el diseño por parte de una persona el cual es interpretado para su futura
 producción en un robot SCARA.
\end_layout

\begin_layout Subsection*
Objetivos específicos
\end_layout

\begin_layout Itemize
Desarrollar una aplicación de software para modelado de objetos 3D.
\end_layout

\begin_layout Itemize
Desarrollar una interface de comunicación con el robot SCARA.
\end_layout

\begin_layout Section
Alcances
\end_layout

\begin_layout Standard
Los alcances previstos son:
\end_layout

\begin_layout Itemize
Implementación de algoritmos de gráficación en 3D.
\end_layout

\begin_deeper
\begin_layout Itemize
Puntos 
\end_layout

\begin_layout Itemize
Líneas
\end_layout

\begin_layout Itemize
Círculos
\end_layout

\begin_layout Itemize
Elipses
\end_layout

\begin_layout Itemize
Curvas de Bezier
\end_layout

\end_deeper
\begin_layout Itemize
Desarrollo de una aplicación multiplataforma (que pueda ejecutarse en la
 mayoría de los sistemas operativos actuales) capaz de modelar objetos de
 madera para su producción utilizando un robot SCARA.
\end_layout

\begin_layout Itemize
Desarrollo de interfaz entre la aplicación multiplataforma para modelar
 objetos de madera y el robot SCARA para la producción.
\end_layout

\begin_layout Section
Metodología
\end_layout

\begin_layout Standard
Para cumplir los objetivos mencionados anteriormente, se propone desarrollar
 una aplicación multiplataforma para el modelado de objetos de madera en
 el lenguaje de programación Java.
\end_layout

\begin_layout Standard
Para lograr una aplicación aceptable se desarrollarán prototipos de la aplicació
n hasta lograr una versión que tenga una velocidad aceptable a la hora de
 generar los modelos en diferentes vistas, así mismo que se genere con rapidez
 aceptable los movimientos del robot.
\end_layout

\begin_layout Standard
Con el fin de mejorar el diseño se evaluará la aplicación continuamente
 en la empresa de la familia Cardiel Cervantes.
\end_layout

\begin_layout Section
Contribuciones 
\end_layout

\begin_layout Standard
A continuación se describen brevemente las contribuciones de este trabajo:
\end_layout

\begin_layout Itemize
Desarrollo de una aplicación multiplataforma para la construcción de modelos
 3D en madera.
 
\end_layout

\begin_layout Itemize
Aplicación multiplataforma para la conexión entre la aplicacion de software
 3D y el robot SCARA.
 
\end_layout

\begin_layout Itemize
Aplicación de código abierto, el código fuente se distribuirá bajo la 
\begin_inset Quotes eld
\end_inset


\emph on
GNU General Public License v2
\emph default

\begin_inset Quotes erd
\end_inset

 y puede ser accedido en la siguiente dirección de internet: http://modelando-ma
dera.googlecode.com para su mejoramiento y/o ser tomado como base para futuros
 proyectos.
\end_layout

\begin_layout Section
Descripción de los capítulos
\end_layout

\begin_layout Standard
En el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:2_Ambiente"

\end_inset

 se presentará una revisión del estado del arte asociado con la paqueteria
 de software existente para el modelado/fabricación de objetos de madera.
\end_layout

\begin_layout Standard
El capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:3_Modelado3D"

\end_inset

 aborda las partes del software 3D, tanto los algoritmos de graficación
 como la forma de interacción con el usuario final.
 
\end_layout

\begin_layout Standard
En el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:4_Interfaces3D"

\end_inset

 se mostrarán las principales interfaces de software para la implementación
 de software 3D, se mostrarán pros y contras de cada una de éstas y finalmente
 se detallará el funcionamiento de la interfaz realizada.
\end_layout

\begin_layout Standard
El capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:5_InterfazModelado"

\end_inset

 trata las características del robot SCARA, la forma de conversión del modelo
 a acciones que el robot entienda.
 También se describirá la interfaz entre el software de modelado y el robot.
\end_layout

\begin_layout Standard
En el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:6_Pruebas"

\end_inset

 se mostrarán resultados de pruebas realizadas al software 3D, seguido de
 los resultados de las pruebas de conectividad entre el software y el robot.
\end_layout

\begin_layout Standard
En el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:7_Conclusiones"

\end_inset

 se aportarán las conclusiones generales, resultado de la investigación
 abordada e ideas para trabajo de investigación posterior a realizar en
 el mismo campo del conocimiento.
 
\end_layout

\begin_layout Chapter
Ambiente de programación de robots manipuladores
\begin_inset CommandInset label
LatexCommand label
name "cha:2_Ambiente"

\end_inset


\end_layout

\begin_layout Standard
Por mucho tiempo el hombre ha elaborado máquinas que imitan las partes del
 cuerpo humano.
 Los antiguos egipcios unieron brazos mecánicos a las estatuas de sus dioses,
 éstos brazos fueron operados por sacerdotes, quienes clamaban que el movimiento
 de estos era inspiración de sus dioses.
 Los griegos contruyeron estatuas que operaban con sistemas hidráulicos
 para fascinar a los adoradores de los templos.
\end_layout

\begin_layout Section
Robot
\end_layout

\begin_layout Standard
El inicio de la robótica actual puede fijarse en la industria textil del
 siglo XVIII, cuando Joseph Jacquard inventa en 1801 una máquina textil
 programable mediante tarjetas perforadas.
 La revolución industrial impulsó el desarrollo de estos agentes mecánicos,
 entre los cuales se destacaron el torno mecánico motorizado de Babbitt
 (1892) y el mecanismo programable para pintar con spray de Pollard y Roselund
 (1939).
 Además de esto durante los siglos XVII y XVIII en Europa fueron construidos
 muñecos mecánicos muy ingeniosos que tenían algunas características de
 robots.
 En 1805, Henri Maillardert construyó una muñeca mecánica que era capaz
 de hacer dibujos.
 
\end_layout

\begin_layout Standard
La palabra robot se empleó por primera vez en una obra de teatro llamada
 "Ros-sum´s Universal Robota
\begin_inset Quotes erd
\end_inset

 (Los Robots Universales de Rossum) escrita por el dramaturgo checo Karel
 Capek en 1920.
 La palabra checa 'Robota' significa servidumbre o trabajador forzado, y
 cuando se tradujo al inglés se convirtió en el término 
\series bold
robot
\series default
.
\end_layout

\begin_layout Standard
Sin embargo el término robot con el paso de los años ha cambiado su significado,
 a continuación se listan algunas de las definiciones más aceptadas:
\end_layout

\begin_layout Itemize
Un manipulador multipropósito automaticamente controlado y reprogramable
 de más de tres ejes
\emph on

\begin_inset CommandInset citation
LatexCommand cite
key "iso8373"

\end_inset

.
 
\end_layout

\begin_layout Itemize
Manipulador multifuncional y reprogramable diseñado para mover material,
 partes, herramientas o dispositivos especializados mediante varios movimientos
 programados para la realización de una variedad de tareas
\emph on

\begin_inset CommandInset citation
LatexCommand cite
key "IRA"

\end_inset

.
\end_layout

\begin_layout Itemize
Mecanismo formado generalmente por elementos en serie, articulados entre
 sí, destinado al agarre y desplazamiento de objetos.
 Es multifuncional y puede ser gobernado directamente por un operador humano
 o dispositivo lógico
\begin_inset CommandInset citation
LatexCommand cite
key "paperRobot"

\end_inset

.
\end_layout

\begin_layout Standard
Para fines de estudio clasificaremos los robots en: 
\end_layout

\begin_layout Itemize
Manipuladores.
 Generalmente están montados sobre una base fija que les sirve para definir
 su área de trabajo y su posición en la misma.
 Su estructura básica es la de un brazo humano.
\end_layout

\begin_layout Itemize
Móviles.
 Este tipo de robots tienen la capacidad de cambiar de posición por si mismos
 para realizar alguna tarea determinada.
 Para lograrlo, tienen sensores que les permiten conocer su ambiente así
 como actuadores que le permiten desplazarse.
\end_layout

\begin_layout Standard
La gran mayoría de los robots usados en la industria son de tipo manipuladores
 y en adelante solamente nos referiremos a éstos.
\end_layout

\begin_layout Subsection
Estructura de los robots manipuladores
\end_layout

\begin_layout Standard
Básicamente la estructura de un robot manipulador es la de un brazo articulado.
 Un robot manipulador consta de las siguientes partes:
\end_layout

\begin_layout Itemize
Estructura mecánica.
\end_layout

\begin_layout Itemize
Sistema sensorial.
\end_layout

\begin_layout Itemize
Elementos terminales.
\end_layout

\begin_layout Itemize
Sistema de control.
\end_layout

\begin_layout Standard
Las cuales se describen brevemente a continuación.
\end_layout

\begin_layout Subsubsection
Estructura mecánica
\end_layout

\begin_layout Standard
Desde el punto de vista mecánico, el robot está formado por una serie de
 elementos o eslabones unidos mediante articulaciones, que permiten un movimient
o relativo entre cada dos eslabones consecutivos.
\end_layout

\begin_layout Standard
Existen diferentes tipos de articulaciones como podemos observar en la figura
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:TiposArticulaciones"

\end_inset

:
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
a) La articulación de rotación suministra un grado de libertad, es decir,
 permite la rotación sobre el eje de la articulación.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
b) La articulación prismática, consiste en una traslación a lo largo del
 eje de la articulación.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
c) En la articulación cilíndrica, existen dos grados de libertad, una rotación
 y una traslación sobre el eje de la articulación.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
d) La articulación planar, se caracteriza por el movimiento de desplazamiento
 en un plano, tiene dos grados de libertad.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
e) Por último, la articulación esférica, combina tres giros en tres direcciones
 perpendiculares en el espacio.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/a_rotacion2.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Rotación
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/a_prismatica.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Prismática
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/a_cilindrica.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Cilíndrica
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/a_planar.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Planar
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/a_esferica2.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Esférica
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tipos de articulaciones
\begin_inset CommandInset label
LatexCommand label
name "fig:TiposArticulaciones"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Sistema sensorial.
\end_layout

\begin_layout Standard
Los sensores son transductores que convierten algún fenómeno físico en señales
 eléctricas que el microcontrolador puede leer 
\begin_inset CommandInset citation
LatexCommand cite
key "Jones98"

\end_inset

.
 La principal función es trasladar la información del mundo real al mundo
 abstracto de la computadora, para que ésta pueda responder de forma correcta.
 
\end_layout

\begin_layout Standard
Algunos de los tipos de sensores son:
\end_layout

\begin_layout Itemize
De medición de desplazamiento.
\end_layout

\begin_layout Itemize
De velocidad y aceleración.
\end_layout

\begin_layout Itemize
Detectores de estructuras del ambiente del robot.
\end_layout

\begin_layout Itemize
De contacto.
\end_layout

\begin_layout Standard
Los interruptores de contacto son dispositivos simples que reportan un valor
 binario: cerrado o abierto, dependiendo de la ubicación de un elemento
 mecánico.
 En particular, el robot SCARA utilia estos sensores para ubicar los límites
 de trabajo de cada articulación.
\end_layout

\begin_layout Subsubsection
Elementos terminales.
\end_layout

\begin_layout Standard
Existen muchos tipos de motores, pero sólo unos cuantos son útiles en robótica,
 y dentro de éstos se encuentran los motores de corriente directa 
\begin_inset CommandInset citation
LatexCommand cite
key "Jones98"

\end_inset

.
 Los motores o servomotores de CD son preferidos debido a su relativa facilidad
 para ser controlados, comparados con otros tipos de motores de CD y con
 los motores de CA 
\begin_inset CommandInset citation
LatexCommand cite
key "tesisCarlosE"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Sistema de control.
\end_layout

\begin_layout Standard
El sistema de control en un robot es la parte más importante, ya que es
 aquí donde las acciones lógicas son convertidas en acciones físicas.
 Estas acciones son realizadas por actuadores y pueden depender de un evento
 del exterior captado por algún sensor.
\end_layout

\begin_layout Subsection
Clasificación de los robots
\end_layout

\begin_layout Standard
Existe una gran variedad de tipos de brazos manipuladores y se pueden clasificar
 de distintas formas: por su estructura, por su forma de control, por su
 área de aplicación, por su fuente de potencia, por su geometría, por su
 movimiento cinemático, etc.
 [Spong89, Ramırez98].
 Hoy en día, los manipuladores están agrupados en clases de acuerdo a la
 combinación de uniones usadas en su construcción [Petriu06] como puede
 observarse en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Categorias-robot"

\end_inset

:
\end_layout

\begin_layout Itemize
Cilíndrico.
 Cuenta con dos articulaciones de rotación y una tipo prismática.
\end_layout

\begin_layout Itemize
Esférico.
 Cuenta con una articulación de rotación y dos de tipo prismática.
\end_layout

\begin_layout Itemize
S.C.A.R.A.
 Cuenta con dos articulaciones de rotación y una tipo prismática.
\end_layout

\begin_layout Itemize
Cartesiano.
 Cuenta con tres articulaciones de tipo prismática.
\end_layout

\begin_layout Itemize
Antropomórfico.
 Cuenta con tres articulaciones de tipo rotación.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/espacio_cilindrico.png
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Cilíndrico
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/espacio_esferico.png
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Esférico
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/espacio_scara.png
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
S.C.A.R.A.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/espacio_cartesiano.png
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Cartesiano
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/espacio_antropomorfico.png
	lyxscale 30
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Antropomórfico
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Categorias-robot"

\end_inset

Categorías de los robots manipuladores y sus respectivas áreas de trabajo
\begin_inset CommandInset citation
LatexCommand cite
key "paperCinematica"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Programación de tareas
\end_layout

\begin_layout Standard
La secuencia que se tiene que realizar para programar una tarea en un robot
 manipulador, generalmente sigue los pasos mostrados en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ProgramacionRobot"

\end_inset

.
 En la figura podemos observar tres componentes que se describen a continuación.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/dCNC.png
	lyxscale 50
	width 25page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:ProgramacionRobot"

\end_inset

Programación de un robot manipulador.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Software CAD
\end_layout

\begin_layout Standard
El software CAD (Diseño Asistido por Computadora, del inglés 
\begin_inset Quotes eld
\end_inset

Computer Aided Design
\begin_inset Quotes erd
\end_inset

) son sitemas informáticos para realizar tareas de creación, modificación,
 análisis y optimización de un diseño.
\end_layout

\begin_layout Subsubsection
Software CAM
\end_layout

\begin_layout Standard
El software CAM (Manufactura Asistida por Computadora, del inglés 
\begin_inset Quotes eld
\end_inset

Computer Aided Manufacturing
\begin_inset Quotes erd
\end_inset

) son sistemas informáticos para la planificación, gestión y control de
 las operaciones de una planta de fabricación, mediante una interfaz directa
 o indirecta entre el sistema informático y los recursos de producción.
 En una interfaz directa la computadora se conecta directamente con el proceso
 de producción para monitorizar su actividad y realizar tareas de supervisión
 y control.
 En una interfaz indirecta la computadora se utiliza como herramienta de
 ayuda para la fabricación, pero en las que no existe conexión directa con
 el proceso de producción.
\end_layout

\begin_layout Standard
La entrada de estos sistemas son generalmente los diseños generados con
 software CAD.
\end_layout

\begin_layout Subsubsection
Software CNC 
\end_layout

\begin_layout Standard
El software CNC (Control Numérico por Computadora, del inglés 
\begin_inset Quotes eld
\end_inset

Computer Numerical Control
\begin_inset Quotes erd
\end_inset

) generalmente lee archivos generados en las aplicaciones CAM y realiza
 las operaciones de comunicación con el robot necesarias para convertirlas
 en el movimiento deseado.
 
\end_layout

\begin_layout Section
Revisión del Estado del Arte
\end_layout

\begin_layout Standard
En la actualidad los robots son usados para realizar tareas peligrosas,
 difíciles, repetitivas y/o complicadas para los humanos.
 En industrias grandes se utilizan frecuentemente robots industriales en
 las líneas de producción.
 Algunas aplicaciones incluyen la limpieza de residuos tóxicos, minería
 y localización de minas terrestres.
 
\end_layout

\begin_layout Standard
Sin embargo, la manufactura continúa siendo el principal mercado donde los
 robots son utilizados, en particular los robots articulados son los más
 usados comúnmente.
 Las aplicaciones incluyen soldado, pintado y carga de maquinaria.
 En este ramo la industria automotriz ha tomado gran ventaja de esta nueva
 tecnología donde los robots han sido programados para reemplazar el trabajo
 de los humanos en muchas tareas repetitivas y peligrosas.
\end_layout

\begin_layout Subsection
Programación de tareas
\end_layout

\begin_layout Standard
Para utilizar un robot se requiere, como ya se describió antes, una aplicación
 CAD-CAM-CNC que sirve de interfaz entre el usuario humano y el robot industrial.
 Los robots manipuladores de robots se diferencian de la automatización
 fija, por ser 
\begin_inset Quotes eld
\end_inset

flexibles
\begin_inset Quotes erd
\end_inset

, es decir, son programables.
 No sólo son programables los movimientos de los manipuladores sino que,
 a través del uso de sensores y comunicación con otros tipos de automatización,
 los manipuladores pueden adaptarse a las variaciones requeridas para realizar
 su tarea.
\end_layout

\begin_layout Standard
Generalmente la programación de los robots se realiza fuera de línea y no
 en tiempo real.
 A continuación se listan paquetes de sofware existentes para programar
 los robots:
\end_layout

\begin_layout Itemize
Microsoft Robotic Studio
\begin_inset CommandInset citation
LatexCommand cite
key "MRS08"

\end_inset

 con un costo aproximado de $ 4,000.00 M.N.
 tiene las siguientes características:
\end_layout

\begin_deeper
\begin_layout Itemize
Herramienta de programación visual para crear y depurar aplicaciones robóticas.
 El desarrollador puede interactuar con los robots mediante interfaces basadas
 en web o nativas al sistema operativo (MS Windows).
\end_layout

\begin_layout Itemize
Contiene simulación realística provista por el motor PhysX de AGEIA.
 Se posibilita la emulación por software o la aceleración por hardware.
\end_layout

\begin_layout Itemize
Se permiten varios lenguajes como: Microsoft Visual Studio Express languages
 (Visual C#® y Visual Basic® .NET), JScript® y Microsoft IronPython 1.0 Beta
 1, y lenguajes de terceros que se adecuen a la arquitectura basada en servicios.
\end_layout

\begin_layout Itemize
Robots soportados: CoroWare's CoroBot ($3 200), Lego Mindstorms NXT, iRobot
 Create y Robosoft's robots (38 a 65 K€).
 Estos robots son de entretenimiento o de propósito educativo.
\end_layout

\end_deeper
\begin_layout Itemize
KUKA.OfficeLite
\begin_inset CommandInset citation
LatexCommand cite
key "KUKA08"

\end_inset

 con un costo superior a los $5,500,000.00 M.N.
 tiene las siguientes características: 
\end_layout

\begin_deeper
\begin_layout Itemize
Este sistema de programación posee las mismas características que el software
 de sistema KUKA: para el manejo y la programación se utiliza la interfaz
 de usuario Original KUKA y la sintaxis KRL: un lenguaje completo.
\end_layout

\begin_layout Itemize
Disponibilidad de todo el repertorio de funciones de las respectivas ediciones
 del software de sistema.
 Sin embargo, no se pueden conectar dispositivos de hardware periféricos.
\end_layout

\begin_layout Itemize
Comprobación de sintaxis mediante el compilador y el interpretador disponibles;
 creación de programas KRL de usuario ejecutables.
\end_layout

\begin_layout Itemize
Control completo de la ejecución de un programa de aplicación de robot.
 Ello permite optimizar la duración de los ciclos.
\end_layout

\begin_layout Itemize
El Techware de KUKA para optimización de programas se puede utilizar e instalar
 en todo momento.
 De este modo, en un PC estándar se puede disponer de todo el software de
 sistema Original, sin necesidad de emulaciones.
\end_layout

\begin_layout Itemize
Las conexiones con el robot real se pueden simular.
\end_layout

\begin_layout Itemize
KUKA.OfficeLite no se puede utilizar para controlar un robot, solo para desarroll
ar aplicaciones.
 De la versión profesional el autor no encontró más información.
\end_layout

\end_deeper
\begin_layout Standard
Algunos programas de software que pueden ser aplicados a la programación
 de tareas de robots se pueden observar en la tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tablaLenguajesProgramacion"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float table
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CAD
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CAM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CNC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AutoCAD
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ArtCAM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TurboCNC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SolidWorks
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SolidCAM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EMC2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RhinoCAD
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DeskCAM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DeskCNC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TurboCAD
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MeshCAM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mach 3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Graphite One CAD
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FreeMill
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
KCAM
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Listado de software CAD/CAM/CNC
\begin_inset CommandInset label
LatexCommand label
name "tab:Listado-de-software"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Desarrollo tecnológico
\end_layout

\begin_layout Standard
La tecnología robótica propia en México no se ha desarrollado.
 Existen casos aislados de avance en manipuladores y en móviles.
\end_layout

\begin_layout Standard
En instituciones de nivel superior como el Tecnológico de Monterrey campus
 Guadalajara se trabaja en la planeación de movimientos para robots.
 En el laboratorio de robótica del Instituto Tecnológico Autónomo de México
 se enfocan al área de uso de robots móviles pequeños.
\end_layout

\begin_layout Standard
En la División de Estudios de Posgrado de la Factuldad de Ingeniería Electrica
 de la Universidad Michoacana de San Nicolas de Hidalgo se han tenido avances
 significativos tanto en robots móviles así como en manipuladores:
\end_layout

\begin_layout Itemize
En el área de robots móviles, se construyó un robot movil
\begin_inset CommandInset citation
LatexCommand cite
key "Tesis A Concha"

\end_inset

 con desempeño comparable al de los robots comerciales.
 El lector interesado pude consultar la tesis de licenciatura para información
 sobre el robot movil desarrolado.
 
\end_layout

\begin_layout Itemize
En el áre de manipuladores se construyerón dos robots SCARA, uno con motores
 de CD
\begin_inset CommandInset citation
LatexCommand cite
key "Tesis O. Rios"

\end_inset

 y otro con motodes de CD y de pasos
\begin_inset CommandInset citation
LatexCommand cite
key "tesisOmar"

\end_inset

.
 
\end_layout

\begin_layout Standard
Para las pruebas del sistema desarrollado en esta tesis, se utilizó el robot
 de motores de CD y pasos.
\end_layout

\begin_layout Chapter
Modelado de objetos
\begin_inset CommandInset label
LatexCommand label
name "cha:3_Modelado3D"

\end_inset


\end_layout

\begin_layout Standard
Una aplicación de modelado de objetos proporciona una biblioteca de funciones,
 que pueden utilizarse para crear diseños de objetos, que posteriormente
 se pueden plasmar en madera o algún otro tipo de material que pueda ser
 moldeado por alguna de las herramientas soportadas por el robot.
 Estas funciones se denominan primitivas gráficas o simplemente primitivas.
\end_layout

\begin_layout Standard
Para describir un modelo, primero es necesario seleccionar un sistema de
 coordenadas cartesianas adecuado, que puede ser bidimensional o tridimensional.
 Después se describen los objetos del modelo proporcionando sus especificaciones
 geométricas.
 Por ejemplo, se define una línea recta proporcionando la posicion de los
 dos puntos extremos.
\end_layout

\begin_layout Section
Sistemas de coordenadas
\end_layout

\begin_layout Standard
Un sistema de coordenadas es un conjunto de valores que permiten definir
 exactamente la posición de un punto cualesquiera en el espacio.
 Debido a que se requiere poder realizar un modelo de un objeto real, se
 requieren el sistema de coordenadas de tres dimensiones como se muestra
 en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sistema-de-coordenadas3d"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tCoordenadas.png
	width 30page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Sistema-de-coordenadas3d"

\end_inset

Sistema de coordenadas de 3 dimensiones
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Primitivas de graficación
\end_layout

\begin_layout Standard
Los elementos que describen la geometría de los objetos se denominan normalmente
 primitivas geométricas.
 Entre las primitivas geométricas más simples son las que indican posiciones
 de puntos y segmentos de líneas rectas.
 Adicionalmente se pueden incluir círculos, elipses y curvas tipo bezier,
 las cuales se abordan a continuación.
\end_layout

\begin_layout Subsection
Punto
\end_layout

\begin_layout Standard
El punto es el objeto más simple que puede representarse, es un elemento
 geométrico que describe una ubicación o posición en el espacio.
 Un punto puede determinarse en el sistema de coordenadas cartesianas mediante
 las distancias a los ejes principales, que se indican con dos variables
 (x, y) en el plano y con tres variables (x, y, z) en el espacio tridimensional.
\end_layout

\begin_layout Standard
Para fines de programación se definió un punto en el espacio con la primitiva
 
\begin_inset Formula $Punto\left(x,\, y,\, z\right)$
\end_inset

, puede observarse su implementación en el código 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Punto-(primitivas.Punto.java)"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status collapsed

\begin_layout LyX-Code

\size footnotesize
public class Punto { 	
\end_layout

\begin_layout LyX-Code

\size footnotesize
  private double x; 	
\end_layout

\begin_layout LyX-Code

\size footnotesize
  private double y; 
\end_layout

\begin_layout LyX-Code

\size footnotesize
  private double z; 
\end_layout

\begin_layout LyX-Code

\size footnotesize
  public Punto(double x, double y, double z) { 		
\end_layout

\begin_layout LyX-Code

\size footnotesize
    this.x = x;
\end_layout

\begin_layout LyX-Code

\size footnotesize
    this.y = y;
\end_layout

\begin_layout LyX-Code

\size footnotesize
	this.z = z; 	
\end_layout

\begin_layout LyX-Code

\size footnotesize
  } 
\end_layout

\begin_layout LyX-Code

\size footnotesize
  public double getX() { return x; }
\end_layout

\begin_layout LyX-Code

\size footnotesize
  public double getY() { return y; }
\end_layout

\begin_layout LyX-Code

\size footnotesize
  public double getZ() { return z; }
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size footnotesize
  public void setX(double x) { this.x = x; }
\end_layout

\begin_layout LyX-Code

\size footnotesize
  public void setY(double y) { this.y = y; }
\end_layout

\begin_layout LyX-Code

\size footnotesize
  public void setZ(double z) { this.z = z; }
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size footnotesize
  public String getXML(int i) { 		
\end_layout

\begin_layout LyX-Code

\size footnotesize
    return "
\backslash
n
\backslash
t<x"+i+">"+x+"</x"+i+">" +
\end_layout

\begin_layout LyX-Code

\size footnotesize
	       "
\backslash
n
\backslash
t<y"+i+">"+y+"</y"+i+">" +
\end_layout

\begin_layout LyX-Code

\size footnotesize
           "
\backslash
n
\backslash
t<z"+i+">"+z+"</z"+i+">";
\end_layout

\begin_layout LyX-Code

\size footnotesize
  } 	
\end_layout

\begin_layout LyX-Code

\size footnotesize
}
\size scriptsize
 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Punto (primitivas.Punto.java)
\begin_inset CommandInset label
LatexCommand label
name "alg:Punto-(primitivas.Punto.java)"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Línea
\end_layout

\begin_layout Standard
La línea recta es la sucesión continua e indefinida de puntos en una sola
 dimensión.
 La ecuaciónes utilizadas son: 
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{eqnarray}
x_{i} & = & x_{1}+\lambda(x_{2}-x_{1})\\
y_{i} & = & y_{1}+\lambda(y_{2}-y_{1})\\
z_{i} & = & z_{1}+\lambda(z_{2}-z_{1})\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Formula $(x_{1},\, y_{1},\, z_{1})$
\end_inset

 pertenecen al punto inicial del segmento de la recta, 
\begin_inset Formula $(x_{2},\, y_{2},\, z_{2})$
\end_inset

 el punto final de la recta y 
\begin_inset Formula $\lambda\in\left[0,1\right]$
\end_inset

.
 En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Linea"

\end_inset

 se puede observar un ejemplo de ésta.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tLinea.png
	lyxscale 50
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Línea
\begin_inset CommandInset label
LatexCommand label
name "fig:Linea"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para fines de programación se definió la clase 
\begin_inset Formula $Línea\left(a,\, b\right)$
\end_inset

, donde 
\begin_inset Formula $a$
\end_inset

 y 
\begin_inset Formula $b$
\end_inset

 son los puntos extremos del segmento de línea, puede observarse su implementaci
ón en el código 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Línea-(primitivas.Linea.java)"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status collapsed

\begin_layout LyX-Code

\size footnotesize
public void linea( Punto a, Punto b)
\end_layout

\begin_layout LyX-Code

\size footnotesize
{
\end_layout

\begin_layout LyX-Code

\size footnotesize
  int i;
\end_layout

\begin_layout LyX-Code

\size footnotesize
  int n=(int)(dist(a.getX(),a.getY(), b.getX(),b.getY())*ptosPixel);
\end_layout

\begin_layout LyX-Code

\size footnotesize
  double inc_lambda = 1.0 / (n - 1.0);
\end_layout

\begin_layout LyX-Code

\size footnotesize
  for(i=0; i < n; i++) {
\end_layout

\begin_layout LyX-Code

\size footnotesize
    grafPto(new Punto(a.getX() + (i * inc_lambda) * (b.getX() - a.getX()),
\end_layout

\begin_layout LyX-Code

\size footnotesize
                      a.getY() + (i * inc_lambda) * (b.getY() - a.getY()),
\end_layout

\begin_layout LyX-Code

\size footnotesize
                      a.getZ() + (i * inc_lambda) * (b.getZ() - a.getZ())
\end_layout

\begin_layout LyX-Code

\size footnotesize
    )); 
\end_layout

\begin_layout LyX-Code

\size footnotesize
  } 
\end_layout

\begin_layout LyX-Code

\size footnotesize
}
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Línea (primitivas.Linea.java)
\begin_inset CommandInset label
LatexCommand label
name "alg:Línea-(primitivas.Linea.java)"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Círculo
\end_layout

\begin_layout Standard
La ecuación paramétrica es:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\begin{array}{c}
x=r*cos\left(\Theta\right)\\
y=r*sin\left(\Theta\right)\end{array}\label{eq:Circulo}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
donde 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\lang english

\begin_inset Formula $\Theta\in\left[0,2\pi\right]$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit
\lang spanish
 y 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\lang english

\begin_inset Formula $r$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit
\lang spanish
 es el radio.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tCirculo.png
	lyxscale 50
	width 20page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Círculo
\begin_inset CommandInset label
LatexCommand label
name "fig:Circulo"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para fines de programación se definió la clase 
\begin_inset Formula $Circulo\left(c,\, r\right)$
\end_inset

 donde 
\begin_inset Formula $c$
\end_inset

 es el punto definido como centro y 
\begin_inset Formula $r$
\end_inset

 es el radio o distancia del centro a cualquier otro punto.
\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Circulo"

\end_inset

 se puede observa un ejemplo, puede observarse su implementación en el código
 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Círculo-(primitivas.Circulo.java)"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status collapsed

\begin_layout LyX-Code

\size footnotesize
void circulo(double radio, double oX, double oY, double oZ, int n, int opc)
\end_layout

\begin_layout LyX-Code

\size footnotesize
{
\end_layout

\begin_layout LyX-Code

\size footnotesize
  int i;
\end_layout

\begin_layout LyX-Code

\size footnotesize
  double inc_ang, ang;
\end_layout

\begin_layout LyX-Code

\size footnotesize
  inc_ang = 360.0 / n * Math.PI / 180.0;
\end_layout

\begin_layout LyX-Code

\size footnotesize
  for(i=0; i < n; i++) {
\end_layout

\begin_layout LyX-Code

\size footnotesize
     ang = inc_ang * i;	  
\end_layout

\begin_layout LyX-Code

\size footnotesize
     switch(opc) {
\end_layout

\begin_layout LyX-Code

\size footnotesize
        case DEF.vistaYX: 
\end_layout

\begin_layout LyX-Code

\size footnotesize
             grafPto(new Punto( oX + radio * Math.cos(ang), 
\end_layout

\begin_layout LyX-Code

\size footnotesize
                     oY + radio * Math.sin(ang), oZ ));  break;								
\end_layout

\begin_layout LyX-Code

\size footnotesize
        case DEF.vistaZX: 
\end_layout

\begin_layout LyX-Code

\size footnotesize
             grafPto(new Punto( oX + radio * Math.cos(ang), 
\end_layout

\begin_layout LyX-Code

\size footnotesize
                     oY, oZ + radio * Math.sin(ang)));   break;
\end_layout

\begin_layout LyX-Code

\size footnotesize
        case DEF.vistaZY: 
\end_layout

\begin_layout LyX-Code

\size footnotesize
             grafPto(new Punto( oX, oY + radio * Math.cos(ang), 
\end_layout

\begin_layout LyX-Code

\size footnotesize
                    oZ + radio_b * Math.sin(ang)));      break;
\end_layout

\begin_layout LyX-Code

\size footnotesize
     }
\end_layout

\begin_layout LyX-Code

\size footnotesize
  }
\end_layout

\begin_layout LyX-Code

\size footnotesize
}
\size default
	
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Círculo (primitivas.Circulo.java)
\begin_inset CommandInset label
LatexCommand label
name "alg:Círculo-(primitivas.Circulo.java)"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Elipse
\end_layout

\begin_layout Standard
La ecuación paramétrica es:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\begin{array}{c}
x=r_{1}*cos\left(\Theta\right)\\
y=r_{2}*sin\left(\Theta\right)\end{array}\label{eq:Elipse}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
donde 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\lang english

\begin_inset Formula $\Theta\in\left[0,2\pi\right]$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit
\lang spanish
 , 
\begin_inset Formula $r_{1}$
\end_inset

 es la distancia al punto más alejado en el eje X y 
\begin_inset Formula $r_{2}$
\end_inset

 es la distancia al punto más alejado sobre el eje Y.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tElipse.png
	lyxscale 50
	width 30page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Elipse
\begin_inset CommandInset label
LatexCommand label
name "fig:Elipse"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para fines de programación se definió la clase 
\begin_inset Formula $Elipse\left(c,\, r_{1},\, r_{2}\right)$
\end_inset

 donde 
\begin_inset Formula $c$
\end_inset

 es el punto definido como centro, 
\begin_inset Formula $r_{1}$
\end_inset

 es la distancia al punto más alejado en el eje horizontal y 
\begin_inset Formula $r_{2}$
\end_inset

 es la distancia al punto más alejado sobre el eje vertical, puede observarse
 su implementación en el código 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Elipse-(primitivas.Elipse.java)"

\end_inset

.
\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elipse"

\end_inset

 se puede observa un ejemplo.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status collapsed

\begin_layout LyX-Code

\size footnotesize
void elipse(double radio_a, double radio_b, double oX, double oY, double
 oZ,
\end_layout

\begin_layout LyX-Code

\size footnotesize
            int n, int opc)
\end_layout

\begin_layout LyX-Code

\size footnotesize
{
\end_layout

\begin_layout LyX-Code

\size footnotesize
  int i;
\end_layout

\begin_layout LyX-Code

\size footnotesize
  double inc_ang, ang;
\end_layout

\begin_layout LyX-Code

\size footnotesize
  inc_ang = 360.0 / n * Math.PI / 180.0;
\end_layout

\begin_layout LyX-Code

\size footnotesize
  for(i=0; i < n; i++) {
\end_layout

\begin_layout LyX-Code

\size footnotesize
     ang = inc_ang * i;	  
\end_layout

\begin_layout LyX-Code

\size footnotesize
     switch(opc) {
\end_layout

\begin_layout LyX-Code

\size footnotesize
        case DEF.vistaYX: 
\end_layout

\begin_layout LyX-Code

\size footnotesize
             grafPto(new Punto( oX + radio_a * Math.cos(ang), 
\end_layout

\begin_layout LyX-Code

\size footnotesize
                     oY + radio_b * Math.sin(ang), oZ ));   break;								
\end_layout

\begin_layout LyX-Code

\size footnotesize
        case DEF.vistaZX: 
\end_layout

\begin_layout LyX-Code

\size footnotesize
             grafPto(new Punto( oX + radio_a * Math.cos(ang), 
\end_layout

\begin_layout LyX-Code

\size footnotesize
                     oY, oZ + radio_b * Math.sin(ang)));    break;
\end_layout

\begin_layout LyX-Code

\size footnotesize
        case DEF.vistaZY: 
\end_layout

\begin_layout LyX-Code

\size footnotesize
             grafPto(new Punto( oX, oY + radio_a * Math.cos(ang), 
\end_layout

\begin_layout LyX-Code

\size footnotesize
                     oZ + radio_b * Math.sin(ang)));        break;
\end_layout

\begin_layout LyX-Code

\size footnotesize
     }
\end_layout

\begin_layout LyX-Code

\size footnotesize
  }
\end_layout

\begin_layout LyX-Code

\size footnotesize
}	
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Elipse (primitivas.Elipse.java)
\begin_inset CommandInset label
LatexCommand label
name "alg:Elipse-(primitivas.Elipse.java)"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Curva de Bezier
\end_layout

\begin_layout Standard
La curva Bézier es un tipo de línea curva ideada por un ingeniero de Renault
 en los años 60 por medio de un método de descripción matemática que conseguía
 definir las transiciones suaves de las curvaturas.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/bezier.png
	lyxscale 50
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Curva de Bezier
\begin_inset CommandInset label
LatexCommand label
name "fig:Curva-de-Bezier"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una curva de Bézier tiene por lo menos cuatro puntos de control y es de
 orden cúbico como se puede apreciar en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Curva-de-Bezier"

\end_inset

, dos de los puntos corresponden a los extremos de la curva, son denominados
 nodos o puntos de anclaje y los otros puntos son denominados puntos de
 control o manejadores y determinan la dirección con que la curvatura ingresa
 a los extremos.
 La forma paramétrica es:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
B(t)=P_{0}(1-t)^{3}+3P_{1}t(1-t)^{2}+3P_{2}t^{2}(1-t)+P_{3}t^{3}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
donde 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\lang english

\begin_inset Formula $t\in\left[0,1\right]$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit
\lang spanish
 .
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status collapsed

\begin_layout LyX-Code

\size footnotesize
public void graficar(Vector<Punto> v) {
\end_layout

\begin_layout LyX-Code

\size footnotesize
  double step= 1/maxPts;		
\end_layout

\begin_layout LyX-Code

\size footnotesize
  double[] Pxi, Pyi, X, Y, t = step;
\end_layout

\begin_layout LyX-Code

\size footnotesize
  Pxi = new double[v.size()];   Pyi = new double[v.size()];
\end_layout

\begin_layout LyX-Code

\size footnotesize
  for(int i=0; i<v.size(); i++) {	
\end_layout

\begin_layout LyX-Code

\size footnotesize
    switch(opc) {
\end_layout

\begin_layout LyX-Code

\size footnotesize
      case DEF.vistaYX: Pxi[i]=v.get(i).getX(); Pyi[i]=v.get(i).getY(); break;
\end_layout

\begin_layout LyX-Code

\size footnotesize
      case DEF.vistaZY: Pxi[i]=v.get(i).getY(); Pyi[i]=v.get(i).getZ(); break;
\end_layout

\begin_layout LyX-Code

\size footnotesize
      case DEF.vistaZX: Pxi[i]=v.get(i).getX(); Pyi[i]=v.get(i).getZ(); break;
\end_layout

\begin_layout LyX-Code

\size footnotesize
    }
\end_layout

\begin_layout LyX-Code

\size footnotesize
  }  
\end_layout

\begin_layout LyX-Code

\size footnotesize
  Xant = -1000;    Yant = -1000;
\end_layout

\begin_layout LyX-Code

\size footnotesize
  while(t<=1) {
\end_layout

\begin_layout LyX-Code

\size footnotesize
    for (int j = Pxi.length-1; j > 0; j--)
\end_layout

\begin_layout LyX-Code

\size footnotesize
      for (int i = 0; i < j; i++){
\end_layout

\begin_layout LyX-Code

\size footnotesize
        Pxi[i] = (1-t)*Pxi[i] + t*Pxi[i+1];
\end_layout

\begin_layout LyX-Code

\size footnotesize
        Pyi[i] = (1-t)*Pyi[i] + t*Pyi[i+1];
\end_layout

\begin_layout LyX-Code

\size footnotesize
      }
\end_layout

\begin_layout LyX-Code

\size footnotesize
    X = Pxi[0];  Y = Pyi[0];
\end_layout

\begin_layout LyX-Code

\size footnotesize
    if(Xant!=-1000&&Yant!=-1000) {
\end_layout

\begin_layout LyX-Code

\size footnotesize
      switch(opc) {
\end_layout

\begin_layout LyX-Code

\size footnotesize
        case DEF.vistaYX: new Linea(plot, new Punto(Xant, Yant, z), 
\end_layout

\begin_layout LyX-Code

\size footnotesize
                          new Punto(X, Y, z), vista); break;
\end_layout

\begin_layout LyX-Code

\size footnotesize
        case DEF.vistaZY: new Linea(plot, new Punto(x, Xant, Yant), 
\end_layout

\begin_layout LyX-Code

\size footnotesize
                          new Punto(x, X, Y), vista); break;
\end_layout

\begin_layout LyX-Code

\size footnotesize
        case DEF.vistaZX: new Linea(plot, new Punto(Xant, y, Yant), 
\end_layout

\begin_layout LyX-Code

\size footnotesize
                          new Punto(X, y, Y), vista); break;
\end_layout

\begin_layout LyX-Code

\size footnotesize
      }
\end_layout

\begin_layout LyX-Code

\size footnotesize
    }
\end_layout

\begin_layout LyX-Code

\size footnotesize
    Xant = X; Yant = Y; t += step;
\end_layout

\begin_layout LyX-Code

\size footnotesize
  }
\end_layout

\begin_layout LyX-Code

\size footnotesize
}
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Curva de Bezier (primitivas.Bezier.java)
\begin_inset CommandInset label
LatexCommand label
name "alg:Curva-de-Bezier"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para fines de programación se definió la clase 
\begin_inset Formula $Bezier\left(p\right)$
\end_inset

 donde 
\begin_inset Formula $p$
\end_inset

 es un conjunto definido de puntos que conforman la curva, puede observarse
 su implementación en el código 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Curva-de-Bezier"

\end_inset

.
\end_layout

\begin_layout Subsection
Elementos compuestos
\end_layout

\begin_layout Standard
Un elemento compuesto se forma con uno o más primitivas u otros elementos
 compuestos.
 En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Elemento-compuesto"

\end_inset

 se muestra un ejemplo de un elemento compuesto, que contiene cuatro primitivas.
 De forma formal tenemos:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
E_{c}=(P_{1},\, P_{2},\, P_{3},\,...,\, P_{n})\end{equation}

\end_inset


\end_layout

\begin_layout Standard
donde 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\lang english

\begin_inset Formula $P_{i}\in\left\{ Punto,\, Línea,\, Polilinea,\, Círculo,\, Elipse,\, Bezier\right\} $
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit
\lang spanish
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tCompuesto.png
	lyxscale 50
	width 15page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Elemento compuesto
\begin_inset CommandInset label
LatexCommand label
name "fig:Elemento-compuesto"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Transformaciones
\begin_inset CommandInset label
LatexCommand label
name "sec:Transformaciones"

\end_inset


\end_layout

\begin_layout Standard
En robótica son de particular interés las transformaciones: escalado, traslación
, rotación y proyección isométrica de un objeto.
 Estas operaciones tienen la ventaja de que se pueden realizar mediante
 un producto matricial y que se pueden combinar multiplicando de antemano
 las matrices de transformación.
\end_layout

\begin_layout Standard
Como se mostró en las secciones anteriores, las primitivas se están definiendo
 mediante puntos de control, un punto 
\begin_inset Formula $(x,\, y,\, z)$
\end_inset

 en el espacio 3D homogéneo será un vector columna:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
p=\left[\begin{array}{c}
x\\
y\\
z\\
1\end{array}\right]\label{eq:TransPunto}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
A continuación se muestran los productos matriciales para: escalado, traslación,
 rotación y proyección de un punto de control.
 Aplicando dichas transformaciones a todos los puntos de control de una
 primitiva se realiza la tranformación a todos los puntos que contiene la
 misma.
\end_layout

\begin_layout Subsection
Escalado
\end_layout

\begin_layout Standard
A continuación se muestra como quedaría el escalado de un punto de control:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
x´\\
y´\\
z´\\
1\end{array}\right]=\left[\begin{array}{cccc}
e_{x} & 0 & 0 & 0\\
0 & e_{y} & 0 & 0\\
0 & 0 & e_{z} & 0\\
0 & 0 & 0 & 1\end{array}\right]\left[\begin{array}{c}
x\\
y\\
z\\
1\end{array}\right]\label{eq:TransEscalamiento}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Donde 
\begin_inset Formula $e_{x}$
\end_inset

 es el factor de escalado en la direccion del eje 
\begin_inset Formula $X$
\end_inset

, 
\begin_inset Formula $e_{y}$
\end_inset

 es el factor de escalado en la direccion del eje 
\begin_inset Formula $Y$
\end_inset

 y 
\begin_inset Formula $e_{z}$
\end_inset

 es el factor de escalado en la direccion del eje 
\begin_inset Formula $Z$
\end_inset

.
 El punto escalado 
\begin_inset Formula $\left[x',\, y',\, z'\right]^{t}$
\end_inset

 proviene del punto original 
\begin_inset Formula $\left[x,\, y,\, z\right]^{t}$
\end_inset

.
 
\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Escalamiento"

\end_inset

 se muestra un ejemplo de escalamiento con 
\begin_inset Formula $e_{x}=2$
\end_inset

 y 
\begin_inset Formula $e_{y}=2$
\end_inset

 de los puntos 
\begin_inset Formula $P_{1}$
\end_inset

, 
\begin_inset Formula $P_{2}$
\end_inset

 y 
\begin_inset Formula $P_{3}$
\end_inset

 a los nuevos 
\begin_inset Formula $P_{1}'$
\end_inset

, 
\begin_inset Formula $P_{2}'$
\end_inset

 y 
\begin_inset Formula $P_{3}'$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tEscalamiento.png
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Escalamiento
\begin_inset CommandInset label
LatexCommand label
name "fig:Escalamiento"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Traslación
\end_layout

\begin_layout Standard
La traslación puede ser expresada como el producto:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
x´\\
y´\\
z´\\
1\end{array}\right]=\left[\begin{array}{cccc}
1 & 0 & 0 & t_{x}\\
0 & 1 & 0 & t_{y}\\
0 & 0 & 1 & t_{z}\\
0 & 0 & 0 & 1\end{array}\right]\left[\begin{array}{c}
x\\
y\\
z\\
1\end{array}\right]\label{eq:TransTrans}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Donde 
\begin_inset Formula $t_{x}$
\end_inset

 es el desplazamiento en la direccion del eje 
\begin_inset Formula $X$
\end_inset

, 
\begin_inset Formula $t_{y}$
\end_inset

 es el desplazamiento en la direccion del eje 
\begin_inset Formula $Y$
\end_inset

 y 
\begin_inset Formula $t_{z}$
\end_inset

 es el desplazamiento en la direccion del eje 
\begin_inset Formula $Z$
\end_inset

.
 El punto trasladado 
\begin_inset Formula $\left[x',\, y',\, z'\right]^{t}$
\end_inset

 proviene del punto original 
\begin_inset Formula $\left[x,\, y,\, z\right]^{t}$
\end_inset

.
 
\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Traslación"

\end_inset

 se muestra un ejemplo de traslación con 
\begin_inset Formula $t_{x}=2$
\end_inset

 de los puntos 
\begin_inset Formula $P_{1}$
\end_inset

, 
\begin_inset Formula $P_{2}$
\end_inset

 y 
\begin_inset Formula $P_{3}$
\end_inset

 a los nuevos 
\begin_inset Formula $P_{1}'$
\end_inset

, 
\begin_inset Formula $P_{2}'$
\end_inset

 y 
\begin_inset Formula $P_{3}'$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tTraslacion.png
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Traslación
\begin_inset CommandInset label
LatexCommand label
name "fig:Traslación"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Rotación
\end_layout

\begin_layout Standard
La rotación alrededor del eje 
\begin_inset Formula $x$
\end_inset

 de un ángulo 
\begin_inset Formula $\Theta$
\end_inset

 esta definido por:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
x´\\
y´\\
z´\\
1\end{array}\right]=\left[\begin{array}{cccc}
1 & 0 & 0 & 0\\
0 & cos\left(\Theta\right) & -sin\left(\Theta\right) & 0\\
0 & sin\left(\Theta\right) & cos\left(\Theta\right) & 0\\
0 & 0 & 0 & 1\end{array}\right]\left[\begin{array}{c}
x\\
y\\
z\\
1\end{array}\right]\label{eq:TransRotaZ}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
La rotación alrededor del eje 
\begin_inset Formula $y$
\end_inset

 de un ángulo 
\begin_inset Formula $\Theta$
\end_inset

 esta definido por:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
x´\\
y´\\
z´\\
1\end{array}\right]=\left[\begin{array}{cccc}
cos\left(\Theta\right) & 0 & -sin\left(\Theta\right) & 0\\
0 & 1 & 0 & 0\\
sin\left(\Theta\right) & 0 & cos\left(\Theta\right) & 0\\
0 & 0 & 0 & 1\end{array}\right]\left[\begin{array}{c}
x\\
y\\
z\\
1\end{array}\right]\label{eq:TransRotaY}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
La rotación alrededor del eje 
\begin_inset Formula $z$
\end_inset

 de un ángulo 
\begin_inset Formula $\Theta$
\end_inset

 esta definido por:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
x´\\
y´\\
z´\\
1\end{array}\right]=\left[\begin{array}{cccc}
cos\left(\Theta\right) & -sin\left(\Theta\right) & 0 & 0\\
sin\left(\Theta\right) & cos\left(\Theta\right) & 0 & 0\\
0 & 0 & 1 & 0\\
0 & 0 & 0 & 1\end{array}\right]\left[\begin{array}{c}
x\\
y\\
z\\
1\end{array}\right]\label{eq:TransRotaX}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Donde 
\begin_inset Formula $\Theta$
\end_inset

 es el ángulo a rotar en el eje correspondiente.
 El punto rotado 
\begin_inset Formula $\left[x',\, y',\, z'\right]^{t}$
\end_inset

 proviene del punto original 
\begin_inset Formula $\left[x,\, y,\, z\right]^{t}$
\end_inset

.
 
\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Rotación"

\end_inset

 se muestra un ejemplo de rotacion en el eje X con 
\begin_inset Formula $\Theta=45$
\end_inset

 de los puntos 
\begin_inset Formula $P_{1}$
\end_inset

, 
\begin_inset Formula $P_{2}$
\end_inset

 y 
\begin_inset Formula $P_{3}$
\end_inset

 a los nuevos 
\begin_inset Formula $P_{1}'$
\end_inset

, 
\begin_inset Formula $P_{2}'$
\end_inset

 y 
\begin_inset Formula $P_{3}'$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tRotacion.png
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Rotación
\begin_inset CommandInset label
LatexCommand label
name "fig:Rotación"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Proyección isométrica
\end_layout

\begin_layout Standard
La proyección isométrica es un método de representación visual de objetos
 de 3 dimensiones en 2 dimensiones.
\end_layout

\begin_layout Standard
Existen 8 diferentes vistas isómetricas, dependiendo del octante que se
 haya elegido.
 Esta transformación mapea un punto en el espacio 3D en un plano visto desde
 el primer octante
\begin_inset CommandInset citation
LatexCommand cite
key "transformaciones"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left[\begin{array}{c}
x´\\
y´\\
0\\
1\end{array}\right]=\left[\begin{array}{cccc}
1 & 0 & 0 & 0\\
0 & 1 & 0 & 0\\
0 & 0 & 0 & 0\\
0 & 0 & 0 & 1\end{array}\right]\left[\begin{array}{cccc}
1 & 0 & 0 & 0\\
0 & cos\left(\alpha\right) & sin(\alpha) & 0\\
0 & -sin(\alpha) & cos(\alpha) & 0\\
0 & 0 & 0 & 1\end{array}\right]\left[\begin{array}{cccc}
cos\left(\beta\right) & 0 & -sin(\beta) & 0\\
0 & 1 & 0 & 0\\
sin(\beta) & 0 & cos(\beta) & 0\\
0 & 0 & 0 & 1\end{array}\right]\left[\begin{array}{c}
x\\
y\\
z\\
1\end{array}\right]\label{eq:Perspectiva}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Formula $\alpha=arcsin(tan(30º))$
\end_inset

 y 
\begin_inset Formula $\beta=45º$
\end_inset

.
 En la ecuación 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Perspectiva"

\end_inset

 se realiza un rotación al rededor del eje Y dado por 
\begin_inset Formula $\beta$
\end_inset

, seguido por una rotación alrededor del eje X dado por 
\begin_inset Formula $\alpha$
\end_inset

, y finalmente se realiza una proyección sobre el plano x-y.
\end_layout

\begin_layout Section
Almacenamiento y recuperación
\end_layout

\begin_layout Standard
A pesar de las mejoras en la tecnología de los dispositivos de almacenamiento,
 de la mejor protección frente a los virus y de las mejoras en la formación,
 siguen ocurriendo desastres y caídas de sistemas en mayor número, haciendo
 de la pérdida de datos un acontecimiento cada vez más habitual.
\end_layout

\begin_layout Standard
Teniendo en cuenta lo anterior se eligió usar un formato flexible tanto
 para la implementación como para la recuperación en caso de alguna perdida
 parcial de la información, se eligió el formato XML.
 Brevemente enseguida se explican las características del formato XML.
\end_layout

\begin_layout Subsection
Almacenamiento en formato XML
\end_layout

\begin_layout Standard
El formato XML (del inglés eXtensible Markup Language) es un metalenguaje
 extensible de etiquetas desarrollado por el World Wide Web Consortium
\begin_inset CommandInset citation
LatexCommand cite
key "XML08"

\end_inset

 como una propuesta de estándar para el intercambio de información estructurada
 entre diferentes plataformas.
 Tiene un papel muy importante en la actualidad ya que permite la compatibilidad
 entre sistemas para compartir la información de una manera segura, fiable
 y fácil.
\end_layout

\begin_layout Standard
Algunas de las ventajas de este formato son:
\end_layout

\begin_layout Itemize
Independiente de la plataforma.
\end_layout

\begin_layout Itemize
Soporta código Unicode.
\end_layout

\begin_layout Itemize
El mismo documento define la estructura y los campos asi como los valores
 respectivos.
\end_layout

\begin_layout Itemize
Está basado en estándares internacionales.
\end_layout

\begin_layout Subsection
Estructura de almacenamiento
\end_layout

\begin_layout Standard
La estructura de almacenamiento puede observarse en el código 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:EstructuraXML"

\end_inset

 y su representación gráfica en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ejemplo-simple"

\end_inset

.
 Como puede verse la estructura es simple, compacta y fácil de entender.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout LyX-Code

\size footnotesize
<modelador>
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size footnotesize
<fig tipo="1" >
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size footnotesize
<x0>32.0</x0><y0>32.0</y0><z0>70.0</z0>
\end_layout

\end_deeper
\begin_layout LyX-Code

\size footnotesize
</fig>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<fig tipo="2" >
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size footnotesize
<x0>23.0</x0><y0>45.0</y0><z0>70.0</z0>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<x1>138.0</x1><y1>45.0</y1><z1>70.0</z1>
\end_layout

\end_deeper
\begin_layout LyX-Code

\size footnotesize
</fig>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<fig tipo="3" >
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size footnotesize
<x0>23.0</x0><y0>61.0</y0><z0>70.0</z0>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<x1>23.0</x1><y1>107.0</y1><z1>70.0</z1>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<x2>134.0</x2><y2>108.0</y2><z2>70.0</z2>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<x3>132.0</x3><y3>62.0</y3><z3>70.0</z3>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<x4>132.0</x4><y4>62.0</y4><z4>70.0</z4>
\end_layout

\end_deeper
\begin_layout LyX-Code

\size footnotesize
</fig>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<fig tipo="4" >
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size footnotesize
<x0>76.0</x0><y0>143.0</y0><z0>70.0</z0>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<x1>105.0</x1><y1>152.0</y1><z1>70.0</z1>
\end_layout

\end_deeper
\begin_layout LyX-Code

\size footnotesize
</fig>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<fig tipo="5" >
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size footnotesize
<x0>179.0</x0><y0>68.0</y0><z0>70.0</z0>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<x1>199.0</x1><y1>124.0</y1><z1>70.0</z1>
\end_layout

\end_deeper
\begin_layout LyX-Code

\size footnotesize
</fig>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<fig tipo="6" >
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size footnotesize
<x0>138.0</x0><y0>171.0</y0><z0>70.0</z0>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<x1>195.0</x1><y1>166.0</y1><z1>70.0</z1>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<x2>225.0</x2><y2>130.0</y2><z2>70.0</z2>
\end_layout

\begin_layout LyX-Code

\size footnotesize
<x3>230.0</x3><y3>55.0</y3><z3>70.0</z3>
\end_layout

\end_deeper
\begin_layout LyX-Code

\size footnotesize
</fig>
\end_layout

\end_deeper
\begin_layout LyX-Code

\size footnotesize
</modelador>
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:EstructuraXML"

\end_inset

Estructura de almacenamiento
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/ejemplo1.png
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Ejemplo simple
\begin_inset CommandInset label
LatexCommand label
name "fig:Ejemplo-simple"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
En el segmento de codigo 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:EstructuraXML"

\end_inset

 puede observarse:
\end_layout

\begin_layout Itemize
Es posible tener una gran cantidad de primitivas en un diseño.
\end_layout

\begin_layout Itemize
Los puntos de control de una primitiva pueden no tener límite, es decir,
 una primitiva puede tener N puntos de control.
 Sólo aplica a la polilínea y curva de bezier.
 
\end_layout

\begin_layout Itemize
Cada primitiva es identificada mediante un número entero (tipo):
\end_layout

\begin_deeper
\begin_layout Itemize
Punto (1)
\end_layout

\begin_layout Itemize
Línea (2)
\end_layout

\begin_layout Itemize
Poli-Línea (3)
\end_layout

\begin_layout Itemize
Círculo (4)
\end_layout

\begin_layout Itemize
Elipse (5)
\end_layout

\begin_layout Itemize
Curva de Bezier (6)
\end_layout

\end_deeper
\begin_layout Section
Importación de otros formatos
\end_layout

\begin_layout Standard
Una herramienta importante en toda aplicación de diseño es la capacidad
 de importar formatos externos a ella.
 
\end_layout

\begin_layout Standard
Como primer formato de importación se desarrolló un importador para el formato
 de imágenes PGM.
 A petición del Sr.
 Rafael Cardiel Cervantes se agregó esta capacidad con la intención de hacer
 figuras en relieve sobre madera a partir de los tonos de grises de una
 imagen en formato PGM.
 En seguida se describe brevemente dicho formato.
\end_layout

\begin_layout Subsection
Formato de Imágenes PGM
\end_layout

\begin_layout Standard
El formato PGM (del inglés Portable GrayMap) es un formato para imágenes
 en tonos de gris de 8 bits sin compresión, diseñado para el fácil intercambio
 entre plataformas
\begin_inset CommandInset citation
LatexCommand cite
key "pgm2003"

\end_inset

.
 Existen dos formatos de almacenamiento: texto plano y binario; solamente
 se trabajo con el formato de texto plano.
\end_layout

\begin_layout Standard
Este formato está compuesto por dos partes(ver código 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Código-PGM"

\end_inset

 para un ejemplo):
\end_layout

\begin_layout Itemize
Un encabezado que da información sobre el tamaño de la imagen (largo y ancho)
 seguido del máximo color expresado (en el rango de 0 a 255)
\end_layout

\begin_layout Itemize
El cuerpo de la imagen que incluye la información de cada pixel.
\end_layout

\begin_layout Standard
La imágen codificada en formato PGM de la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ejemplo-PGM"

\end_inset

 corresponde al formato presentado en el código 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Código-PGM"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status collapsed

\begin_layout LyX-Code

\size footnotesize
P2
\end_layout

\begin_layout LyX-Code

\size footnotesize
10 7 
\end_layout

\begin_layout LyX-Code

\size footnotesize
255
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\size footnotesize
255   255   255   255   255   255   255   255   255   255	 
\end_layout

\begin_layout LyX-Code

\size footnotesize
255    0     0     0    255   255   164   164   164   255
\end_layout

\begin_layout LyX-Code

\size footnotesize
255    0    255    0    255   255   164   255   255   255
\end_layout

\begin_layout LyX-Code

\size footnotesize
255    0     0     0    255   255   164   164   255   255
\end_layout

\begin_layout LyX-Code

\size footnotesize
255    0    255    0    255   255   164   255   255   255
\end_layout

\begin_layout LyX-Code

\size footnotesize
255    0    255    0    255   255   164   164   164   255
\end_layout

\begin_layout LyX-Code

\size footnotesize
255   255   255   255   255   255   255   255   255   255
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Código PGM
\begin_inset CommandInset label
LatexCommand label
name "alg:Código-PGM"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/ejemplopgm.png
	width 20page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Ejemplo PGM
\begin_inset CommandInset label
LatexCommand label
name "fig:Ejemplo-PGM"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Interfaz de software
\begin_inset CommandInset label
LatexCommand label
name "cha:4_Interfaces3D"

\end_inset


\end_layout

\begin_layout Standard
La interfaz de usuario es uno de los apartados con más relevancia de un
 sistema de cómputo.
 En la actualidad todo sistema debe contener una herramienta con la que
 el usuario pueda ordenar a la computadora qué hacer.
 Una interfaz de usuario mal diseñada puede causar que el mejor sistema
 de cómputo sea ineficaz y por lo tanto sea deshechado, es por esto que
 se debe realizar un buen diseño de la interfaz de usuario, la cual incluye:
\end_layout

\begin_layout Itemize
Consideraciones sobre el diseño de la interfaz gráfica.
\end_layout

\begin_layout Itemize
La eleccion de un lenguaje de programación apropiado.
\end_layout

\begin_layout Standard
En este capítulo se presentan algunos elementos importantes del diseño de
 interfaces gráficas, el lenguaje de programación y el software de modelado
 desarrollado por el autor.
\end_layout

\begin_layout Section
Diseño de la interfaz de usuario
\end_layout

\begin_layout Standard
La Interfaz Gráfica de Usuario (IGU) es la parte más importante de los sistemas
 computarizados debido a que el usuario interactúa de forma directa con
 ella.
 Las metas de una IGU son lograr que el trabajo con la computadora sea fácil,
 productivo y agradable 
\begin_inset CommandInset citation
LatexCommand cite
key "disenoInterface"

\end_inset

.
\end_layout

\begin_layout Standard
La IGU se conforma de dos componentes: entrada y salida.
 La entrada es la forma en que los usuarios comunican sus necesidades a
 la computadora.
 La salida es el medio por el cual la computadora muestra los resultados
 de las operaciones requeridas por el usuario.
\end_layout

\begin_layout Standard
Propiamente, una interfaz de usuario provee la mezcla de: mecanismo de entrada
 y salida que de manera eficiente satisfagan las necesidades del usuario,
 capacidades, y limitaciones en la forma más eficiente.
\end_layout

\begin_layout Subsection
Principios generales de un buen diseño
\end_layout

\begin_layout Standard
Enseguida se revizan algunos principios generales para la IGU que deben
 ser tomados en cuenta 
\begin_inset CommandInset citation
LatexCommand cite
key "disenoInterface"

\end_inset

:
\end_layout

\begin_layout Subsubsection
Accesibilidad
\end_layout

\begin_layout Standard
El sistema deberá poder ser usado por personas de diversas capacidades y
 limitantes.
 Originalmente este término fue usado para referirse a sistemas accesibles
 a usuarios con discapacidades.
 Actualmente el término accesibilidad se refiere a cubrir las necesidades
 de la mayoría de los usuarios.
\end_layout

\begin_layout Standard
Las principales características de un sistema accesible son: Perceptibilidad,
 Operatibilidad y Simplicidad.
\end_layout

\begin_layout Subsubsection
Disponibilidad
\end_layout

\begin_layout Standard
Todos los aspectos de un sistema deberán de estar disponibles en cualquier
 momento.
 Sólo deberán no estar disponibles en aquellas situaciones que no tenga
 sentido.
\end_layout

\begin_layout Subsubsection
Claridad
\end_layout

\begin_layout Standard
La interfaz debe ser clara en apariencia visual y conceptual.
 Los elementos visuales deben ser entendibles, relacionados con objetos
 del mundo real.
 Los conceptos y textos deben ser simples y no confusos.
\end_layout

\begin_layout Subsubsection
Consistencia
\end_layout

\begin_layout Standard
Consistencia es la uniformidad en apariencia y localizacion de los objetos
 dentro de la IGU.
 Es importante ya que puede reducir la necesidad de adquirir nuevas habilidades
 para una actividad que puede ser similar a otra.
 Si un nuevo sistema impone necesidades de aprender nuevas habilidades en
 los usuarios, este puede convertirse en un sistema no productivo e innecesario.
\end_layout

\begin_layout Standard
Un sistema deberá lucir y operar de forma consistente, es decir:
\end_layout

\begin_layout Itemize
Una acción realizada sobre los mismos datos siempre deberá devolver el mismo
 resultado.
\end_layout

\begin_layout Itemize
La posición de los elementos estándares no cambiará.
\end_layout

\begin_layout Subsubsection
Control
\end_layout

\begin_layout Standard
El usuario debe tener control sobre las acciones que esta realizando el
 sistema.
 
\end_layout

\begin_layout Subsubsection
Eficiencia
\end_layout

\begin_layout Standard
En cada paso de un proceso, se debe mostrar al usuario toda la información
 y herramientas necesarias para terminar el proceso.
 El usuario no debe tener la necesidad de buscar información ni herramientas
 en lugares externos al proceso activo.
\end_layout

\begin_layout Subsubsection
Tiempo de respuesta
\end_layout

\begin_layout Standard
Cuando un usuario realice una solicitud el sistema debe contestar lo más
 rápido que le sea posible.
 Si al realizar una solicitud el sistema no responde en un tiempo considerable,
 puede ser considerado como que el sistema ha fallado.
\end_layout

\begin_layout Subsubsection
Recuperacion
\end_layout

\begin_layout Standard
El sistema debe contar con un sistema de recuperación que permita deshacer
 una acción.
 Con este mecanismo se reduce en gran medida los errores de usuarios nuevos.
 El punto de retorno puede ser hacia la acción anterior, pantalla anterior
 o al inicio de un determinado periodo de tiempo.
\end_layout

\begin_layout Standard
El ojetivo es mantener la estabilidad, es decir, cuando el usuario realice
 una acción errónea que pueda llevar a una situación peligrosa exista alguna
 forma de regresar al punto anterior estable.
 La recuperación debe ser obvia, automática y simple de realizar.
\end_layout

\begin_layout Subsubsection
Simplicidad
\end_layout

\begin_layout Standard
La simplicidad es reconocida cuando cualquier usuario puede de manera simple
 entender y usar un sistema con la mínima experiencia y documentación.
\end_layout

\begin_layout Subsubsection
Visibilidad
\end_layout

\begin_layout Standard
Los sistemas son más usables cuando de una manera clara indican el estado
 y los resultados de las acciones realizadas por los usuarios.
 
\end_layout

\begin_layout Section
Lenguaje de programación
\end_layout

\begin_layout Standard
En la actualidad existe una gran cantidad de lenguajes de programación,
 la mayoría de propósito general y el resto de propósito específico, a continuac
ión se listan los más populares de ambas categorías: C, Basic, Java, MS
 .Net, Perl y PHP.
\end_layout

\begin_layout Standard
Estos podrían ser los más utilizados en la actualidad, pero debido a la
 heterogeneidad de sistemas operativos y arquitecturas, no todos los lenguajes
 de programación son aplicables en todos los casos.
 
\end_layout

\begin_layout Standard
En el caso de los lenguajes compilados es poco probable su funcionalidad
 en diferentes plataformas debido a la dependencia de tipo de procesador
 que adquieren al momento de compilar, por ejemplo si se compila en un procesado
r tipo RISC es imposible ejecutarlo en un procesador tipo CISC.
\end_layout

\begin_layout Standard
Por otro lado, los lenguajes interpretados son muy portables a todas las
 arquitecturas y sistemas operativos, debido a que no dependen de un tipo
 de arquitectura, pero requieren de que exista un progama nativo que los
 interprete, es decir, que si la empresa desarrolladora del lenguaje interpretad
o no libera una versión de su intérprete para un sistema operativo en una
 arquitectura determinada, los programas escritos en este lenguaje no se
 ejecutarán.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="5">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Windows
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linux
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MacOS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Portabilidad
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Basic
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
.Net
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Perl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PHP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tablaLenguajesProgramacion"

\end_inset

Lenguajes de programación y Sistemas Operativos
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tablaLenguajesProgramacion"

\end_inset

 se puede apreciar los alcances de los lenguajes de programación más desarrollad
os y más difundidos en la actualidad, dejando claro que Java es el lenguaje
 de programación con mayor portabilidad, debido a que se cuenta con intérpretes
 para todas las arquitecturas y además que no se requiere modificar el código
 fuente para ejecutarse en éstas.
 En seguida se describe brevemente dicho lenguaje de programación.
\end_layout

\begin_layout Subsection
Java
\end_layout

\begin_layout Standard
Java es una plataforma de software desarrollada por Sun Microsystem, de
 forma que los programas creados en ella, puedan ejecutarse sin cambios
 en diferentes tipos de arquitecturas y dispositivos computacionales.
 
\end_layout

\begin_layout Standard
Esta plataforma está compuesta por:
\end_layout

\begin_layout Itemize
El Lenguaje de programación.
\end_layout

\begin_layout Itemize
La máquina virtual de Java (JVM).
\end_layout

\begin_layout Itemize
Un conjunto de bibliotecas estándar, conocidas como API.
\end_layout

\begin_layout Standard
El lenguaje de programación usa una sintaxis similar al lenguaje C++, incorpora
 sincronización, manejo de tareas e interfaces como un mecanismo alternativo
 a la herencia múltiple de C++.
\end_layout

\begin_layout Standard
La máquina virtual de Java (JVM) es un programa nativo (un ejecutable de
 una plataforma específica) capaz de interpretar y ejecutar código binario
 especial (llamado Java Bytecode), el cual es generado a partir del compilador
 de Java.
 Es por esto que Sun Microsystem ha liberado versiones de su JVM para las
 arquitecturas y sistemas operativos más utilizados.
\end_layout

\begin_layout Standard
Debido al desarrollo de JVM en los sistemas operativos, las aplicaciones
 desarrolladas en Java se convierten en aplicaciones multiplataforma.
 Es por esto que para desarrollar la aplicación de modelado se utilizó Java.
 En seguida se describe las secciones más relevantes de la aplicación.
\end_layout

\begin_layout Section
Software desarrollado
\end_layout

\begin_layout Standard
El software desarrollado fue incluyó la biblioteca SWT desarrollada por
 IBM, la cual obtiene una apariencia idéntica a las aplicaciones nativas
 al sistema operativo, logrando cumplir así unos de los principios fundamentales
 de un buen diseño de interfaz gráfica 
\begin_inset Quotes eld
\end_inset

consistencia
\begin_inset Quotes erd
\end_inset

.
 Es decir, mediante la biblioteca SWT se uniformiza la apariencia con las
 aplicaciones del sistema operativo anfitrión.
\end_layout

\begin_layout Subsection
Iniciando el software
\end_layout

\begin_layout Standard
Al iniciar la aplicación nos encontramos con una pantalla como la que se
 muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pantalla-principal"

\end_inset

, donde se pueden resaltar cinco secciones importantes:
\end_layout

\begin_layout Itemize
Área de menús (1).
\end_layout

\begin_layout Itemize
Barra de herramientas de acceso rápido (2).
\end_layout

\begin_layout Itemize
Barra de herramientas de expansión (3).
\end_layout

\begin_layout Itemize
Área de trabajo (4).
\end_layout

\begin_layout Itemize
Descripción del punto actual (5).
\end_layout

\begin_layout Standard
A continuación se describe brevemente cada una de estas secciones.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/pinicial2.png
	lyxscale 50
	width 100line%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Pantalla principal
\begin_inset CommandInset label
LatexCommand label
name "fig:Pantalla-principal"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Área de menús
\end_layout

\begin_layout Standard
Esta área contiene las acciones que debe presentar todo sistema computacional.
 En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Área-de-menús"

\end_inset

(a) se muestra las acciones básicas sobre manipulación de archivos:
\end_layout

\begin_layout Itemize
Nuevo.
 Se utiliza para crear un nuevo diseño o un diseño sin nombre.
 Todos los archivos recibirán la extensión xml.
 Si se escogiera un nombre existente, se mostrará un mensaje indicando la
 existencia de un diseño con ese nombre y dando la opción de sustituirlo.
\end_layout

\begin_layout Itemize
Abrir.
 Con esta orden se cargan los diseños existentes, creados con anterioridad,
 para su visualización, modificación o implementación.
 
\end_layout

\begin_layout Itemize
Importar.
 Permite transformar archivos en formato PGM en un diseño entendible por
 el programa.
\end_layout

\begin_layout Itemize
Cerrar.
 Este comando permite cerrar el diseño actual sin almacenar los cambios
 efectuados al diseño.
\end_layout

\begin_layout Itemize
Guardar.
 Para almacenar los diseños realizados duarante una sesión de trabajo.
 Si el proyecto tiene nombre solo se actualizará, en caso contrario se solicitar
á un nombre para el diseño.
\end_layout

\begin_layout Itemize
Guardar Como.
 Permite almacenar el diseño actual con un nombre diferente al que tiene,
 si aún no tiene nombre se solicitara un nombre para el diseño.
\end_layout

\begin_layout Itemize
Salir.
 Este comando sale del programa sin guardar los cambios efectuados en el
 diseño actual, sólo preguntando si en realidad desea salir.
\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Área-de-menús"

\end_inset

(b) se muestra las acciones disponibles de edición:
\end_layout

\begin_layout Itemize
Deshacer.
 Permite deshacer la ultima acción realizada.
\end_layout

\begin_layout Itemize
Rehacer.
 Permite rehacer una accion deshecha.
\end_layout

\begin_layout Itemize
Eliminar primitiva.
 Este comando permite eliminar una primitva seleccionada del diseño.
\end_layout

\begin_layout Itemize
Duplicar primitiva.
 Este comando duplica una primitiva seleccionada.
\end_layout

\begin_layout Itemize
Preferencias del sistema.
 Permite seleccionar opciones referentes al sistema, como nombre del puerto
 y estilo de área de trabajo.
\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Área-de-menús"

\end_inset

(c) se muestra las acciones pertinentes que permiten que el robot realice
 el diseño activo.
 Contiene las opciones de:
\end_layout

\begin_layout Itemize
Activar robot.
 Con esta orden se realizan dos operaciones: Se comprueba que el puerto
 serial mediante el cual se realizará la conexión sea el indicado y se realiza
 un proceso para bloquear el uso del puerto y así evitar fallas en la comunicaci
ón con el robot.
\end_layout

\begin_layout Itemize
Iniciar proceso robot.
 Este comando inicia el proceso de transformación del diseño a comandos
 entendibles por el robot SCARA y los envía al mismo.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/marchivo.png
	lyxscale 40
	width 30page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Menú archivo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/medicion.png
	lyxscale 40
	width 35page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Menú Edición
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/mherramientas.png
	lyxscale 40
	width 35page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Menú Herramientas
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Área de menús
\begin_inset CommandInset label
LatexCommand label
name "fig:Área-de-menús"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Barra de herramientas de acceso rápido
\end_layout

\begin_layout Standard
Contiene acceso rápido a tareas comunes como crear un nuevo diseño, abrir
 un diseño, así como la acciónes de deshacer y rehacer.
 Esta seccion puede apreciarse en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Barra-de-herramientas-1"

\end_inset

 en la parte superior izquierda, justo debajo del área de menús.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/baccesorapido.png
	width 35page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Barra de herramientas de acceso rápido
\begin_inset CommandInset label
LatexCommand label
name "fig:Barra-de-herramientas-1"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Barra de herramientas de expansión
\end_layout

\begin_layout Standard
Estas herramientas están agrupadas en diferentes contenedores: 
\begin_inset Quotes eld
\end_inset

Herramientas de diseño
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Figuras en proyecto
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Vistas
\begin_inset Quotes erd
\end_inset

 y 
\begin_inset Quotes eld
\end_inset

Envia robot
\begin_inset Quotes erd
\end_inset

 para una mejor funcionabilidad cumpliendo así con los principios de un
 buen diseño de la interfaz gráfica: consistencia, eficiencia, disponibilidad
 y simplicidad.
 A continuación se describe brevemente cada una de éstas.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/herramientasdiseno.png
	lyxscale 50
	width 35page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Herramientas de diseño
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/figurasproyecto.png
	lyxscale 50
	width 35page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Figuras en proyecto
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/enviarobot.png
	lyxscale 50
	width 35page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Envia Robot
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Barra de herramientas
\begin_inset CommandInset label
LatexCommand label
name "fig:Barra-de-herramientas"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Herramientas de diseño.
 Este contenedor tiene las herramientas de diseño predefinidas asi como
 los elementos compuestos generados por el usuario como se puede apreciar
 en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Barra-de-herramientas-1"

\end_inset

(a).
\end_layout

\begin_deeper
\begin_layout Itemize
Las herramientas predefinidas son: Punto, Línea, Polilínea, Círculo, Elipse
 y curvas de Bezier.
\end_layout

\begin_layout Itemize
Elementos compuestos.
 Aquí aparecerán todos aquellos diseños almacenados en un directorio denominado
 
\begin_inset Quotes eld
\end_inset

galeria
\begin_inset Quotes erd
\end_inset

 como patrones para ser insertados como si se tratara de una herramienta
 predefinida.
\end_layout

\end_deeper
\begin_layout Itemize
Figuras en proyecto.
 Aquí se mantiene una lista de figuras que se encuentran en el diseño actual.
 A cada figura existente se pueden aplicar las tranformaciones mencionadas
 en la sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Transformaciones"

\end_inset

 rotación, escalado, traslación así como operaciones de duplicación y eliminació
n de primitivas existentes utilizando los controles que se aprecian en la
 figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Barra-de-herramientas-1"

\end_inset

(b).
\end_layout

\begin_layout Itemize
Vistas.
 Permiten cambiar la vista del diseño, como se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Vistas-disponibles"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
Frente.
 Permite la vista del plano x-y.
\end_layout

\begin_layout Itemize
Arriba.
 Permite la vista del plano x-z.
\end_layout

\begin_layout Itemize
Lateral.
 Permite la vista del plano y-z.
\end_layout

\begin_layout Itemize
Proyección isométrica.
 Muestra una proyección en perspectiva del diseño activo.
\end_layout

\end_deeper
\begin_layout Itemize
Envia robot.
 Permite el envio del diseño activo al robot SCARA.
\end_layout

\begin_deeper
\begin_layout Itemize
Inicia / Detiene el envio hacia el robot SCARA, además de que muestra un
 barra de progreso como se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Barra-de-herramientas-1"

\end_inset

(c).
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/vistaarriba.png
	lyxscale 50
	width 35page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Arriba
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/vistafrente.png
	lyxscale 50
	width 35page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Frente
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/vistalateral.png
	lyxscale 50
	width 35page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Lateral
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/vistaperspectiva.png
	lyxscale 50
	width 35page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Perspectiva
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Vistas disponibles
\begin_inset CommandInset label
LatexCommand label
name "fig:Vistas-disponibles"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Área de trabajo
\end_layout

\begin_layout Standard
El área de trabajo es la parte central donde se pueden realizar los diferentes
 trazos haciendo uso de la herramienta de diseño, puede apreciarse en la
 figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Área-de-trabajo"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/areatrabajo.png
	lyxscale 50
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Área de trabajo
\begin_inset CommandInset label
LatexCommand label
name "fig:Área-de-trabajo"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En esta área de trabajo es donde se visualizarán todos los trazos realizados.
\end_layout

\begin_layout Subsubsection
Descripción del punto actual
\end_layout

\begin_layout Standard
La descripción del punto actual se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pantalla-principal"

\end_inset

 en la parte inferior izquierda, esta nos presenta información sobre la
 posición actual donde se encuentra el cursor dentro del area de trabajo
 del robot, además muestra el comando para mover el robot SCARA a la posición
 relativa.
\end_layout

\begin_layout Subsection
Versiones realizadas
\end_layout

\begin_layout Standard
Las versiones de software desarrolladas se listan a continuación con una
 pequeña descripción de los componentes usados y su desempeño.
\end_layout

\begin_layout Subsubsection*
Versión 1
\end_layout

\begin_layout Standard
En la versión 1 se implementó usando Java y OpenGL(usando jogl para realizar
 el enlace con OpenGL
\begin_inset CommandInset citation
LatexCommand cite
key "java.joglj3d"

\end_inset

) pero lamentablemente fue muy inestable debido a que si la computadora
 no tiene una tarjeta de video dedicada el procesador tiene que realizar
 la emulación y esto conlleva a una operación lenta de la aplicación.
 Siendo uno de los puntos más relevantes la velocidad de la aplicación,
 en específico para la comunicación con el robot mediante el puerto serial.
 Fue deshechada esta implementación.
\end_layout

\begin_layout Subsubsection*
Versión 2
\end_layout

\begin_layout Standard
En ésta versión se implementarón dos hilos para intentar eliminar el problema
 del envio retrasado por la emulación de OpenGL, sin embargo no siempre
 se lograba enviar al robot con la velocidad y continuidad necesaria.
 Esta versión también fue deshechada.
\end_layout

\begin_layout Subsubsection*
Versión 3 
\end_layout

\begin_layout Standard
En la versión 3 se decidió abandonar OpenGL por los motivos mencionados
 anteriormente y se inicio la implementación con primitivas gráficas de
 Java (canvas).
 Se logró eliminar el problema del envio al robot.
 
\end_layout

\begin_layout Subsubsection*
Versión 4
\end_layout

\begin_layout Standard
En esta última versión se cambiarón los controles de Java.swing(jframe, jbutton,
 etc) por los correspondientes de la biblioteca SWT (shel, button, etc)
 debido a que usando la biblioteca SWT la aplicación logra tener una apariencia
 idéntica a las aplicaciones nativas del sistema operativo.
\end_layout

\begin_layout Chapter
Interfaz con el robot SCARA
\begin_inset CommandInset label
LatexCommand label
name "cha:5_InterfazModelado"

\end_inset


\end_layout

\begin_layout Standard
La interfaz entre el software modelador y el robot es una parte muy importante,
 ya que si ésta llega a colapsar o mal-funcionar, se verá reflejado en un
 trabajo final no satisfactorio.
\end_layout

\begin_layout Section
Robot SCARA
\end_layout

\begin_layout Standard
El robot manipulador con el cual se trabajó se puede apreciar en la figura
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:RobotScara"

\end_inset

.
 Este robot SCARA de 4 grados de libertad construido en la Facultad de Ingenierí
a Electrica de la Universidad Michoacana de San Nicolás de Hidalgo.
 La estructura física fue realizada por una empresa dedicada a la robótica,
 denominada 
\begin_inset Quotes eld
\end_inset

Cervantes Co.
\begin_inset Quotes erd
\end_inset

, ubicada en Paracho Michoacán.
 La programación del controlador del robot SCARA fue realizada por Omar
 Rodríguez Páez 
\begin_inset CommandInset citation
LatexCommand cite
key "tesisOmar"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/robot-scara.png
	lyxscale 10
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:RobotScara"

\end_inset

Robot SCARA
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Características
\end_layout

\begin_layout Standard
Las características más relevantes acerca del robot son:
\end_layout

\begin_layout Itemize
4 Grados de libertad.
\end_layout

\begin_layout Itemize
Altura de 60 cm.
\end_layout

\begin_layout Itemize
Alcance máximo de su brazo, 50 cm.
\end_layout

\begin_layout Itemize
Construido en acero y aluminio.
\end_layout

\begin_layout Itemize
Peso aproximado de 45 Kg.
\end_layout

\begin_layout Subsection
Arquitectura
\end_layout

\begin_layout Standard
A continuación se listan algunas de las características más relevantes del
 robot utilizado en el presente trabajo:
\end_layout

\begin_layout Subsubsection
Sistema sensorial.
\end_layout

\begin_layout Standard
El robot cuenta con sensores:
\end_layout

\begin_layout Itemize
Sensores Odométricos.
 Estos sensores mide la posición o rango de rotación de un eje.
\end_layout

\begin_layout Itemize
Sensores de límite o de posición límite de cada articulación.
 Es un dispositivo muy simple que provee una gran fiabilidad para conocer
 con certeza las posiciones de inicio y final de cada uno de los ejes del
 robot SCARA.
\end_layout

\begin_layout Subsubsection
Elementos terminales.
\end_layout

\begin_layout Standard
El robot cuenta con dos motores de pasos, uno para el hombro y otro para
 el codo, éstos permiten un movimiento sobre los ejes X y Y; y dos motores
 de CD con escobillas para la llamada rotación de muñeca y para definir
 la profundidad.
\end_layout

\begin_layout Subsubsection
Sistema de control.
\end_layout

\begin_layout Standard
El robot utiliza un sólo módulo Adapt9S12DP256 con el microcontrolador 9S12DP256
C de Motorola [Arts04], el cual se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Modulo-Adapt9S12DP256"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tAdap.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Modulo-Adapt9S12DP256"

\end_inset

Módulo Adapt9S12DP256 del microcontrolador 68hcs12
\begin_inset CommandInset citation
LatexCommand cite
key "tesisOmar"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Limitantes
\end_layout

\begin_layout Standard
Posiblemente la limitante más importante biene dada por el rango reducido
 del área de trabajo, dejando un limitado conjunto de posibles aplicaciones.
 También cabe mencionar la parte de control ya que esta se realiza en forma
 secuencial y no paralela, es decir no se permite el movimiento simultáneo
 de varias articulaciones.
\end_layout

\begin_layout Section
Conversión de modelado a acciones SCARA
\end_layout

\begin_layout Standard
Debido a que en el modelo sólo contamos con puntos definidos dentro del
 sistema de coordenadas cartesianas de tres dimensiones es necesario calcular
 el conjunto de ángulos de las articulaciones del robot para logar el resultado
 deseado.
 
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $\left(\Theta_{1},\,\Theta_{2},\,\Theta_{3},\, D\right)$
\end_inset

 una configuración del robot donde 
\begin_inset Formula $\Theta_{1}$
\end_inset

 se refiere a la rotación de la articulación del brazo, 
\begin_inset Formula $\Theta_{2}$
\end_inset

 se refiere a la rotación del codo, 
\begin_inset Formula $\Theta_{3}$
\end_inset

 se refiere a la rotación de la muñeca y 
\begin_inset Formula $D$
\end_inset

 la profundiad de la herramienta, como se ilustra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Configuración-de-un"

\end_inset

.
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $\left(x,\, y,\, z,\,\Theta\right)$
\end_inset

 la posición y orientación final de la herramienta.
\end_layout

\begin_layout Standard
En robótica se conoce como el problema de cinemática directa al problema
 de determinar la posición y orientación de la herramienta 
\begin_inset Formula $\left(x,\, y,\, z,\,\Theta\right)$
\end_inset

 si conocemos la configuración de las articulaciones 
\begin_inset Formula $\left(\Theta_{1},\,\Theta_{2},\,\Theta_{3},\, D\right)$
\end_inset

.
 Si lo que deseamos es encontrar la configuración de las articulaciones
 
\begin_inset Formula $\left(\Theta_{1},\,\Theta_{2},\,\Theta_{3},\, D\right)$
\end_inset

 a partir de la especificación de una posición y orientación deseada de
 la herramienta, el problema se conoce como cinemática inversa.
\end_layout

\begin_layout Standard
Para nuestros fines, lo que tenemos son los puntos deseados y necesitamos
 la configuración del robot para alcanzar dichos puntos, es decir, requerimos
 solucionar el problema de cinemática inversa.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/scara1.png
	width 30page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Vista lateral
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename imagenes/scara2.png
	width 30page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Vista superior
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Configuración de un robot SCARA
\begin_inset CommandInset label
LatexCommand label
name "fig:Configuración-de-un"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Cinemática inversa
\end_layout

\begin_layout Standard
En la cinemática inversa se conoce la posición y la orientación del elemento
 terminal, referido a la base y se desea determinar los ángulos articulares
 para alcanzar dicha posición.
\end_layout

\begin_layout Standard
Existen varias soluciones a este problema:
\end_layout

\begin_layout Itemize
Soluciones Cerradas(analíticas): Solución algebraica y solución geométrica.
\end_layout

\begin_layout Itemize
Soluciones Numéricas Iterativas.
\end_layout

\begin_layout Standard
Debido a su naturaleza iterativa, las soluciones numéricas son generalmente
 mucho más lentas que las solución de forma cerrada.
 En este trabajo sólo nos enfocaremos en las soluciones analíticas, en particula
r en la solución geométrica, porque para la configuración sencilla del robot
 SCARA, presenta una solución muy rápida y sencilla.
\end_layout

\begin_layout Subsubsection
Solución Geométrica
\end_layout

\begin_layout Standard
Recordando algunas identidades trigonométricas:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\frac{sin\left(A\right)}{a}=\frac{sin\left(B\right)}{b}=\frac{sin\left(C\right)}{c}\label{eq:leycos1}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
a^{2}=b^{2}+c^{2}-\left(2bc\right)cos\left(A\right)\label{eq:leycos2}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
'
\begin_inset Formula \begin{equation}
cos\left(\Theta\right)=cos\left(-\Theta\right)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Primero se sabe que la orientación del último eslabón es la suma de las
 variables articulares, como se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Orientación-del-ultimo"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\Theta=\Theta_{1}+\Theta_{2}+\Theta_{3}\label{eq:geo-teta}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tcinematica1.png
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Orientación-del-ultimo"

\end_inset

Orientación del último eslabón
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Se calcula 
\begin_inset Formula $\Theta_{2}$
\end_inset

 aplicando ec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:leycos2"

\end_inset

 (observar figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:CinematicaLongitudes"

\end_inset

):
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
x^{2}+y^{2}=l_{1}^{2}+l_{2}^{2}-\left(2l_{1}l_{2}\right)\cos\left(180-\Theta_{2}\right)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tcinematica3.png
	lyxscale 50
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:CinematicaLongitudes"

\end_inset

Longitudes 
\begin_inset Formula $L_{1}\, y\, L_{2}$
\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
debido a que:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
cos\left(180-\Theta_{2}\right)=-cos\left(\Theta_{2}\right)\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Resulta:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
cos\left(\Theta_{2}\right)=\frac{x^{2}+y^{2}-l_{1}^{2}-l_{2}^{2}}{2l_{1}l_{2}}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/tcinematica2.png
	lyxscale 50
	width 40page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:CinematicaAngulos"

\end_inset

Ángulos 
\begin_inset Formula $\beta,\,\psi\, y\,\Theta_{1}$
\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Se calcula 
\begin_inset Formula $\Theta_{1}$
\end_inset

 :
\end_layout

\begin_layout Standard
Si se definen dos ángulos como se muestra en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:CinematicaAngulos"

\end_inset

 se cumple:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\Theta_{1}=\beta-\psi\end{equation}

\end_inset


\end_layout

\begin_layout Standard
El ángulo 
\begin_inset Formula $\beta$
\end_inset

 se calcula:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
sin\left(\beta\right)=\frac{y}{\sqrt{x^{2}+y^{2}}}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
y para el ángulo 
\begin_inset Formula $\psi$
\end_inset

 se usa ec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:leycos1"

\end_inset

 y se tiene:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
cos\left(\psi\right)=\frac{x^{2}+y^{2}+l_{1}^{2}-l_{2}^{2}}{2l_{1}\sqrt{x^{2}+y^{2}}}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Finalmente se calcula 
\begin_inset Formula $\Theta_{3}$
\end_inset

 usando la siguiente ecuación:
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\Theta_{3}=\Theta-\Theta_{1}-\Theta_{2}\label{eq:geo-teta3}\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Implementación de la cinemática inversa.
\end_layout

\begin_layout Standard
La implementación de la solución geométrica para la cinemática inversa se
 muestra en el codigo 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Cinemática-inversa-(cinematica.Inversa.java)"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status collapsed

\begin_layout LyX-Code

\size scriptsize
package cinematica;
\end_layout

\begin_layout LyX-Code

\size scriptsize
import primitivas.Punto;
\end_layout

\begin_layout LyX-Code

\size scriptsize
public class Inversa { 
\end_layout

\begin_layout LyX-Code

\size scriptsize
 double Res_M[] = new double[]{ 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  (360.0 / 800.0) * (8.0 / 44.0) * (8.0 / 60.0) * (Math.PI / 180.0),
\end_layout

\begin_layout LyX-Code

\size scriptsize
  (360.0 / 800.0) * (8.0 / 32.0) * (8.0 / 36.0) * (Math.PI / 180.0),
\end_layout

\begin_layout LyX-Code

\size scriptsize
  (360.0 / 2000.0) * (1.0 / 19.7) * (8.0 / 20.0) * (Math.PI / 180.0),
\end_layout

\begin_layout LyX-Code

\size scriptsize
  (1.0 / 2000.0) * (1.0 / 6.3) * (25.4 / 11.0) 
\end_layout

\begin_layout LyX-Code

\size scriptsize
 }; 
\end_layout

\begin_layout LyX-Code

\size scriptsize
 int Def_M[] = new int[]{ 5000, 5350, 42500, 150000 }; 
\end_layout

\begin_layout LyX-Code

\size scriptsize
 double longs[]= new double[] { 200.0, 200.0}; 
\end_layout

\begin_layout LyX-Code

\size scriptsize
 double teta_global = 90.0*(Math.PI/180.0); 
\end_layout

\begin_layout LyX-Code

\size scriptsize
 double minx = -200; double miny = 66; 
\end_layout

\begin_layout LyX-Code

\size scriptsize
 double div = 2.4; 
\end_layout

\begin_layout LyX-Code

\size scriptsize
 public void get_angles(Punto p, int M[]){ 
\end_layout

\begin_layout LyX-Code

\size scriptsize
   get_angles((p.getX()/div)+minx, (p.getY()/div)+miny, M);
\end_layout

\begin_layout LyX-Code

\size scriptsize
   M[3]=(int)p.getZ(); 
\end_layout

\begin_layout LyX-Code

\size scriptsize
 } 
\end_layout

\begin_layout LyX-Code

\size scriptsize
 public void get_angles(double x, double y, int M[]) { 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  double x2 = Math.pow(x, 2); 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  double y2 = Math.pow(y, 2); 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  double l1 = Math.pow(longs[0], 2); 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  double l2 = Math.pow(longs[1], 2); 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  double angs[] = new double[3]; 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  double beta, phi; 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  beta = Math.asin( y / ( Math.sqrt (x2 + y2) ) ); 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  if (x < 0) 
\end_layout

\begin_layout LyX-Code

\size scriptsize
    beta = Math.PI - beta;
\end_layout

\begin_layout LyX-Code

\size scriptsize
  phi = Math.acos ( (x2 + y2 + l1 - l2) /( 2 * longs[0] * Math.sqrt(x2 + y2)
 ) ); 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  angs[0] =beta - phi; 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  angs[1]= Math.acos( (x2 + y2 - l1 - l2 )/ (2 * longs[0] * longs[1]) );
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  angs[2]= (teta_global - angs[0] - angs[1]); 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  M[0] = (int) (angs[0] / Res_M[0]) + Def_M[0]; 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  M[1] = (int) (angs[1] / Res_M[1]) + Def_M[1]; 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  M[2] = (int) (angs[2] / Res_M[2]) + Def_M[2]; 
\end_layout

\begin_layout LyX-Code

\size scriptsize
  M[3] = Def_M[3]; 
\end_layout

\begin_layout LyX-Code

\size scriptsize
 } 
\end_layout

\begin_layout LyX-Code

\size scriptsize
} 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Cinemática inversa (cinematica.Inversa.java)
\begin_inset CommandInset label
LatexCommand label
name "alg:Cinemática-inversa-(cinematica.Inversa.java)"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Conectividad PC-Robot
\end_layout

\begin_layout Standard
Debido a que el robot SCARA usa conexión mediante el puerto serial (RS232)
 primero se realizó una interfaz capaz de comunicar la aplicación desarrollada
 en lenguaje Java, con el sistema de control del robot SCARA.
\end_layout

\begin_layout Standard
Existen varias bibliotecas para la comunicación serial, compatibles con
 lenguaje Java.
 Algunas bibliotecas aún están en desarrollo, otras sólo son para un determinado
 sistema operativo.
 En la tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Bibliotecas-para-comuniación"

\end_inset

 se muestran algunas de las bibliotecas más usadas para la conexión mediante
 puerto serial.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Biblioteca
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Multiplataforma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tipo de licencia
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
javaconn
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GPL
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rxtx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Si
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GPL
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Bibliotecas para comunicación RS232
\begin_inset CommandInset label
LatexCommand label
name "tab:Bibliotecas-para-comuniación"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Debido a que la biblioteca rxtx da soporte a la mayoría de las plataformas
 (MS-Windows, Linux, Mac OS) se optó por utlizar esta biblioteca además
 de que es transparente a la hora de programar, es decir no requiere hacerse
 ningún cambio para que la comunicación se realize mediante puerto serial
 en las diferentes plataformas.
\end_layout

\begin_layout Standard
En el código 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Conexión-mediante-puerto"

\end_inset

 se muestra la implementación de la conexión con el robot SCARA mediante
 el puerto serial.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status collapsed

\begin_layout LyX-Code
\noindent

\size scriptsize
package serial;
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
/*  ...
  */
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
public class Comunicacion { 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
 /*  ...
  */
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
 public void connect (String nombrePuerto) throws Exception { 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  CommPortIdentifier portIdentifier = CommPortIdentifier.getPortIdentifier(nombre
Puerto); 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
 if ( portIdentifier.isCurrentlyOwned() ) { 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  System.out.println("Error: El puerto está en uso"); 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
 } 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
 else { 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  CommPort commPort = portIdentifier.open(this.getClass().getName(),2000);
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  if ( commPort instanceof SerialPort ) { 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
    SerialPort serialPort = (SerialPort) commPort;
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
   serialPort.setSerialPortParams(velPto,SerialPort.DATABITS_8,
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
SerialPort.STOPBITS_1,SerialPort.PARITY_NONE); 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
   in = serialPort.getInputStream(); 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
   out = serialPort.getOutputStream(); 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  } 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  else { 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
   System.out.println("Error: Solo soporta puerto serial."); 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  } 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
 } 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
 } 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
 public String leer() throws IOException { 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  byte[] buffer = new byte[2]; 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  in.read(buffer,0, 1); 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  String s=""; 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  do { 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
   in.read(buffer,0, 2); 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  } while(new String(buffer).equalsIgnoreCase("W")==false); 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  return "W";  
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
 } 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
 public String escribe(String str) throws IOException { 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  for(int i=0; i<str.length(); i++) { 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
   out.write((int)str.charAt(i)); 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  } 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
  return leer(); 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
 } 
\end_layout

\begin_layout LyX-Code
\noindent

\size scriptsize
} 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Conexión mediante puerto serial (serial.Comunicacion.java)
\begin_inset CommandInset label
LatexCommand label
name "alg:Conexión-mediante-puerto"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Versiones realizadas
\end_layout

\begin_layout Standard
Los cambios más significativos de la implementación que llevarón a cambios
 drásticos se mencionan a continuación con el nombre de versiones.
\end_layout

\begin_layout Subsubsection*
Versión 1
\end_layout

\begin_layout Standard
En la versión 1 se implementó la conexión con el robot SCARA usando un la
 bibloteca javaconn.
 Ésta versión opero de manera eficiente en el sistema operativo Linux, sin
 embargo en MS-Windows no operó del todo bien, en ocasiones el sistema se
 volvia inestable y la conexión con el puerto serial se perdía.
 Esta versión fue deshecada.
\end_layout

\begin_layout Subsubsection*
Versión 2
\end_layout

\begin_layout Standard
En ésta versión se cambió la biblioteca de conexion de javaconn a rxtx dando
 resultados muy buenos, es decir ya no se detectarón problemas en la conexión
 en ambos sistemas operativos (Linux y MS Windows).
 También la biblioteca rxtx permitió bloquear el puerto serial dando una
 mayor seguridad durante el proceso de envio de comandos al robot.
\end_layout

\begin_layout Chapter
Pruebas
\begin_inset CommandInset label
LatexCommand label
name "cha:6_Pruebas"

\end_inset


\end_layout

\begin_layout Standard
En este capítulo se describe brevemente los requerimientos del sistema así
 como la forma de instalar las aplicaciones y bibliotecas en las diferentes
 plataformas.
 También se muestran los resultados de la realización de pruebas usando
 el robot SCARA y el programa desarrollado en esta tesis.
\end_layout

\begin_layout Section
Introducción 
\end_layout

\begin_layout Standard
Para poder ejecutar la aplicación desarrollada es necesario tener un entorno
 adecuado para su ejecución.
\end_layout

\begin_layout Subsubsection
Requisitos mínimos del sistema
\end_layout

\begin_layout Standard
El equipo necesario para ejecutar la aplicación desarrollada será el mostrado
 en la tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Requisitos-mínimos-del"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features>
<column alignment="center" valignment="middle" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Concepto
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Valor
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Procesador
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Velocidad de 1 Ghz o superior
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Memoria
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
256 Mb como mínimo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Almacenamiento
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
20 Mb
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MS-Windows XP o superior
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sistema operativo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linux kernel 2.6 o superior
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MacOS X Tiger o superior
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Java
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JRE 1.6 o superior
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bibliotecas
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RXTX 2.2 o superior
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SWT 3.4 o superior
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Requisitos mínimos del sistema
\begin_inset CommandInset label
LatexCommand label
name "tab:Requisitos-mínimos-del"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Instalando Java
\end_layout

\begin_layout Standard
Descargar e instalar Java Runtime Enviroment 1.6 o superior de la página
 oficial de Sun Microsystem: http://java.sun.com/javase/downloads/index.jsp.
 Si el sistema operativo anfitrión es MS Windows solo es necesario ejecutar
 el archivo ejecutable descargado.
\end_layout

\begin_layout Subsubsection
Instalando bibliotecas
\end_layout

\begin_layout Standard
Para instalar la biblioteca necesaria para la comunicación con el robot
 es necesario descargar la version más actual del sitio oficial http://users.frii.
com/jarvi/rxtx/ y descomprimir los archivos correspondientes al sistema
 operativo anfitrion y mover los archivos a una carpeta común con la aplicación
 desarrollada.
\end_layout

\begin_layout Standard
Finalmente la biblioteca SWT necesaria para la interfaz gráfica es necesario
 descargar la version más actual del sitio oficial http://eclipse.org/swt/
 y descomprimir los archivos correspondientes al sistema operativo anfitrión
 y mover los archivos a una carpeta común con la aplicación desarrollada.
\end_layout

\begin_layout Subsubsection
Instalando la aplicación desarrollada
\end_layout

\begin_layout Standard
Para ejecutar la aplicación desarrollada en esta tesis hay dos formas:
\end_layout

\begin_layout Itemize
Usar algun cliente svn, svn es un sistema de control de versiones usado
 para mantener el código fuente actual así como sus versiones previas
\begin_inset CommandInset citation
LatexCommand cite
key "svn"

\end_inset

, y descargar la versión en desarrollo y compilarla desde el código fuente.
 Para esto se deben realizar los siguientes comandos:
\begin_inset Newline newline
\end_inset

[user@site]$ 
\emph on
svn checkout http://modelando-madera.googlecode.com/svn/trunk/ modelando-madera-re
ad-only
\emph default

\begin_inset Newline newline
\end_inset

[user@site]$ 
\emph on
javac ide.Tesis.java
\emph default

\begin_inset Newline newline
\end_inset

[user@site]$ 
\emph on
java ide.Tesis
\end_layout

\begin_layout Itemize
Descargar la última versión liberada por el autor desde la página oficial
 http://modelando-madera.googlecode.com y ejecutarla dando doble click sobre
 el archivo o bien ejecutando el comando:
\begin_inset Newline newline
\end_inset

[user@site]$ 
\emph on
java -jar modelador.jar
\end_layout

\begin_layout Section
Funcionalidad multiplataforma del software 3D
\end_layout

\begin_layout Standard
Como se puede apreciar en la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Aplicación-ejecutándose-en"

\end_inset

 los controles usados para la manipulación de la aplicación existen en las
 plataformas más usadas comunmente.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/vistaWindows.png
	lyxscale 50
	width 35page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Windows XP
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/vistaLinux.png
	lyxscale 50
	width 35page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Linux
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Aplicación ejecutándose en diferentes plataformas
\begin_inset CommandInset label
LatexCommand label
name "fig:Aplicación-ejecutándose-en"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Tiempos-de-carga"

\end_inset

 puede observarse que la aplicación funcionó perfectamente en los sistemas
 operativos más comunes, además que cumple con la integración con el tema
 de pantalla que el sistema operativo define.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sistema Operativo (s.o.)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Carga del programa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Redibujo (11000 figuras)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Integración con el s.o.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linux (openSuSE 11.0) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.20 seg
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7.0 seg
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sí
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mac OS (tiger)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 seg
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7.20 seg
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sí
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MS-Windows (Vista)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.20 seg
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7.50 seg
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sí
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tiempos de carga del programa
\begin_inset CommandInset label
LatexCommand label
name "tab:Tiempos-de-carga"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Conectividad multiplataforma entre software y el robot
\end_layout

\begin_layout Standard
Las pruebas de conectividad fueron realizadas con éxito gracias a la biblioteca
 rxtx que soporta la mayoría de los sistemas operativos más usados actualmente.
 En la tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Puerto-serial:-nombre"

\end_inset

 pueden apreciarse los únicos cambios realizados en cada uno de los sistemas
 operativos, esto debido a que el puerto cambia de nombre en cada uno de
 los sistemas operativos.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sistema Operativo (s.o.)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nombre del puerto
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Permite modo exclusivo de puerto
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linux (openSuSE 11.0) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
/dev/ttyUSB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Si
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mac OS (tiger)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
/dev/tty.usbserial
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Si
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MS-Windows (Vista)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
COM5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Si
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Puerto serial: nombre y modo de uso
\begin_inset CommandInset label
LatexCommand label
name "tab:Puerto-serial:-nombre"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Debido a que los sistemas operativos mostrados en la tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Puerto-serial:-nombre"

\end_inset

 soportan el modo exclusivo de un puerto en específico no se detectó ninguna
 interferencia por algun otro programa que intentara utilizar el mismo puerto
 dando como resultado una plena seguridad de que una vez activado el puerto
 la comunicación con el robot SCARA se realizará con plena seguridad.
\end_layout

\begin_layout Section
Pruebas en campo
\end_layout

\begin_layout Standard
Los tiempos promedios realizados en campo utilizando madera suave se pueden
 ver en la tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:tiemposejecucion"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="3">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Objeto
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Numero de puntos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tiempo de procesamiento en robot
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Punto
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 segundo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Línea (10 cm)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
500
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 segundos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Círculo (rádio: 2 cm) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
450
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 segundos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Elipse (2 y 1 cm para sus radios)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
400
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 segundos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezier (aprox 10 cm)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
700
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8 segundos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Imágen a relieve (15x15 cm)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21.5 minutos
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Pruebas y tiempos
\begin_inset CommandInset label
LatexCommand label
name "tab:tiemposejecucion"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ejemplo-de-9"

\end_inset

 puede observarse la implementación de nueve primitvas realizadas en madera
 en aproximadamente 1 minuto.
 Además en la misma figura se realizó esta tarea 10 veces para apreciar
 la precisión con la que trabaja el robot SCARA, como se puede observar
 parece que solo se hubiera realizado una vez.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/elipse2.png
	lyxscale 20
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Ejemplo de 9 primitivas
\begin_inset CommandInset label
LatexCommand label
name "fig:Ejemplo-de-9"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:pgm_a_robot"

\end_inset

 se muestra un ejemplo de una imagen en formato PGM y su respectiva implementaci
ón en madera se puede observar en la figura.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/logo_dgeti.jpg
	lyxscale 40
	width 30page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:pgm_a_robot"

\end_inset

Ejemplo PGM
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename imagenes/dgti_robot.JPG
	lyxscale 40
	width 70page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:pgm_a_robot-1"

\end_inset

Ejemplo PGM realizado en madera
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Conclusiones
\begin_inset CommandInset label
LatexCommand label
name "cha:7_Conclusiones"

\end_inset


\end_layout

\begin_layout Standard
La aplicacion desarrollada termina con una gran cantidad de esfuerzos realizados
 para tener un primer robot industrial de bajo costo realizado completamente
 con tecnología y conocimiento propio.
 Este desarrollo consta de: 
\end_layout

\begin_layout Itemize
Desarrollo mecánico de un robot SCARA, elaborado por el Sr.
 Rafael Cardiel Cervantes.
\end_layout

\begin_layout Itemize
Desarrollo electrónico/lógico de un robot SCARA, Trabajo realizado por Omar
 Ríos y Omar Rodriguez en sus tesis de licenciaturoa de la Facultad de Ingenierí
a Eléctrica de la Universidad Michoacana de San Nicolás de Hidalgo 
\begin_inset CommandInset citation
LatexCommand cite
key "Tesis O. Rios,tesisOmar"

\end_inset

.
\end_layout

\begin_layout Itemize
Desarrollo de una aplicación para diseñar y realizar tareas utilizando un
 robot SCARA.
\end_layout

\begin_layout Standard
Siendo en la parte final donde se ubica la aplicación desarrollada en la
 presente tesis.
\end_layout

\begin_layout Section
Conclusiones
\end_layout

\begin_layout Itemize
Se eligió Java como lenguaje de programación debido a su gran virtud de
 poder ser ejecutado en la mayoría de las plataformas sin la necesidad de
 alterar el código fuente o recompilar el mismo.
\end_layout

\begin_layout Itemize
Se diseñó una aplicación modular dando la posibilidad de que en un futuro
 a la aplicación se pueda agregar nuevos módulos o bien mejorar los existentes
 sin la necesidad de modificar el código completo.
\end_layout

\begin_layout Itemize
Se desarrollaron diferentes clases para las primitivas Punto, Línea, Círculo,
 Elipse, Bezier para un manejo más eficiente a la hora de su programación.
\end_layout

\begin_layout Itemize
Se destaca el uso de la biblioteca SWT que permite que la aplicación desarrollad
a luzca como una aplicación nativa del sistema operativo anfitrión.
\end_layout

\begin_layout Itemize
Se cumplieron los objetivos fundamentales que son la creación de una aplicación
 de software libre para el robot de bajo costo desarrollado en la División
 de Estudios de Posgrado de la Facultad de Ingeniería Eléctrica de la Universida
d Michoacana de San Nicolás de Hidalgo.
\end_layout

\begin_layout Itemize
Se culminó el proceso de la generación de un robot industrial de bajo costo
 realizado con tecnología y conocimiento nacional.
\end_layout

\begin_layout Itemize
Es posible usar el robot en la industria de la madera, en procesos de realizar
 detalles de algunas partes de las guitarras.
\end_layout

\begin_layout Section
Sugerencias para trabajos futuros 
\end_layout

\begin_layout Standard
Las limitaciones mecánicas y electrónicas del robot para el cual fue desarrollad
a la aplicación de este trabajo mostró puntos interesantes en los cuales
 se tiene que desarrollar nuevas soluciones.
 A continuación se mencionan algunos puntos en los que se podría mejorar
 o desarrollar.
\end_layout

\begin_layout Subsection
Aplicación desarrollada
\end_layout

\begin_layout Enumerate
Finalizar el importador/exportador de código G, el estándar del software
 CNC para robots, para la aplicación.
 Actualmente su desarrollo se encuentra en fase de prueba y no fue incluido
 en esta tesis por no ser parte de la propuesta inicial.
\end_layout

\begin_layout Enumerate
Revisar los códigos fuentes disponibles del software EMC2, software desarrollado
 por la comunidad de software libre para robots CNC y generar un módulo
 de compatibilidad con la aplicacion desarrollada en esta tesis.
\end_layout

\begin_layout Subsection
Electrónica del robot SCARA
\end_layout

\begin_layout Enumerate
Acondicionar la conexión actual del robot SCARA de serial (rs232) a paralelo,
 ya que ésta última es utilizada por la mayoría de los programas actuales
 de CNC.
\end_layout

\begin_layout Enumerate
Reprogramar el controlador del robot SCARA para realizar movimientos simultáneos
, debido a que actualmente los realiza en secuencia y esto ocaciona movimientos
 no deseados.
\end_layout

\begin_layout Chapter*
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Glosario}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Glosario
\end_layout

\begin_layout Description
CISC Complex-Intruction-Set Computing.
\end_layout

\begin_layout Description
CRM Customer Relationship Management.
\end_layout

\begin_layout Description
ERP Enterprise Resource Planning.
\end_layout

\begin_layout Description
ISO International Organization for Standardization.
\end_layout

\begin_layout Description
JIRA Japan Industrial Robot Association.
\end_layout

\begin_layout Description
OpenGL Open Graphics Library.
\end_layout

\begin_layout Description
PGM Portable GrayMap.
\end_layout

\begin_layout Description
RISC Reduced-Intruction-Set Computing.
\end_layout

\begin_layout Description
SCARA Selective Compliant Articulated Robot Arm.
\end_layout

\begin_layout Description
SVN Subversion
\end_layout

\begin_layout Description
XML Extensible Markup Language.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "WIKI-ROBOT"
key "key-3"

\end_inset

Wikipedia, Industrial Robot, 2008, <http://en.wikipedia.org/wiki/Industrial_robot>.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Kurfess05"
key "roboAutomata"

\end_inset

Kurfess, T.
 Robotics and Automation Handbook.
 Ed.
 CRC PRESS, 2005.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Gibilisco03"
key "encicloRobot"

\end_inset

Gibilisco, S.
 Concise Encyclopedia of Robotics,Ed.
 McGraw-Hill, 2003
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Davison07"
key "java.joglj3d"

\end_inset

Davison, A.
 Pro Java 6 3D Game Development Java 3D, JOGL, JInput and JOAL APIs.
 Ed.
 Apress, 2007
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Ollero"
key "manipuladores"

\end_inset

Ollero, A.
 Robótica: Manipuladores y robots móviles, Marcombo Editorial.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Galitz07"
key "disenoInterface"

\end_inset

Galitz, W.
 The Essential Guide to User Interface Design, Ed.
 Wiley, 2007.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Rodriguez08"
key "tesisOmar"

\end_inset

Rodriguez, O.
 Diseño y Construcción de un Robot SCARA utilizando motores de CD de pasos
 y con escobillas, Tesis de Licenciatura, UMSNH, 2008
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Estrada06"
key "tesisCarlosE"

\end_inset

Estrada, C.
 Diseño de un sistema de control de seguimiento de trayectorias para un
 robot móvil.
 Tesis de Maerstría.
 UMSNH, 2006.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Sanchez07"
key "paperCinematica"

\end_inset

Sanchéz, O.
 Cinemática de los manipuladores, Universidad Huelva, Huelva España.
 2007
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Sanchez06"
key "paperRobot"

\end_inset

Sanchéz, O.
 Robot, Universidad Huelva, Huelva España.
 2006
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "IRA08"
key "IRA"

\end_inset

Instituto de Robótica de América, 2008
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Kurfess05"
key "roboticayautomatizacion"

\end_inset

Kurfess, T .Robotics and automation handbook.
 Ed.
 CRC Press, 2005
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Delrieux00"
key "compgrafica"

\end_inset

Delrieux, C.
 Introducción a la Computación Gráfica.
 Dpto Ingeniería Eléctrica, Universidad nacional del sur.
 2000.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Jones98"
key "Jones98"

\end_inset

Jones, J.
 L., Flynn, A.
 M., y Seiger, B.
 A.
 Mobile Robots.
 Cambridge University Press, 1998.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "mrs2008"
key "MRS08"

\end_inset

Microsoft Robotics Studio, 2008, <http://www.msdn.microsoft.com/en-us/robotics/defa
ult.aspx>.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Kuka08"
key "KUKA08"

\end_inset

Kuka robotics, 2008, <http://www.kuka-robotics.com>.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "PROBOTIX09"
key "Probotix"

\end_inset

CNC Stepper Motor Driver System & CNC Router Kits, 2009, <http://www.probotix.com>
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Concha07"
key "Tesis A Concha"

\end_inset

Concha, A.
 Diseño y construcción de un robot móvil, Tesis de licenciatura, UMSNH,
 2007.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Ríos07"
key "Tesis O. Rios"

\end_inset

Ríos, O.
 Diseño e implementación del control de un brazo manipulador scara.
 Tesis de licenciatura.
 UMSNH, 2007.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "ISO8373:94"
key "iso8373"

\end_inset

ISO Standard 8373, Manipulating Industrial Robots.
 1994
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Carlbom78"
key "transformaciones"

\end_inset

Carlbom, I., Paciorek, J.
 Planar Geometric Projections and Viewing Transformations, ACM Computing
 Surveys, 1978.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Bray08"
key "XML08"

\end_inset

Bray, T., Paoli, J., Sperberg-McQueen, C., Maler, E.
 Extensible Markup Language (XML) 1.0 (Fifth Edition), W3C Recommendation,
 2008 <http://www.w3.org/TR/2008/REC-xml-20081126/>.
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Poskanzer03"
key "pgm2003"

\end_inset

Poskanzer, J., PGM Format Specification, 2003 <http://netpbm.sourceforge.net/doc/pg
m.html>.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "Collins-Sussman08"
key "svn"

\end_inset

Collins-Sussman, B., Fitzpatrick, B., Pilato, C., Version Control with Subversion,
 Publicado: TBA, 2008.
\end_layout

\end_body
\end_document
